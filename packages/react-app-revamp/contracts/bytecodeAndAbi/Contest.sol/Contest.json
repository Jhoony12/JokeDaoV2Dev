{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_prompt",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_submissionMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_votingMerkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "_constructorIntParams",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInMerkle",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ContestCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldContestStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newContestStart",
          "type": "uint256"
        }
      ],
      "name": "ContestStartSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldCreator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newCreator",
          "type": "address"
        }
      ],
      "name": "CreatorSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldDownvotingAllowed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newDownvotingAllowed",
          "type": "uint256"
        }
      ],
      "name": "DownvotingAllowedSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxProposalCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxProposalCount",
          "type": "uint256"
        }
      ],
      "name": "MaxProposalCountSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldNumAllowedProposalSubmissions",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newNumAllowedProposalSubmissions",
          "type": "uint256"
        }
      ],
      "name": "NumAllowedProposalSubmissionsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "oldOfficialRewardsModule",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract RewardsModule",
          "name": "newOfficialRewardsModule",
          "type": "address"
        }
      ],
      "name": "OfficialRewardsModuleSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "ProposalsDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AMOUNT_FOR_SUMBITTER_PROOF",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COUNTING_MODE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "METADATAS_COUNT",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressSubmitterVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalCastVoteCounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressTotalVotesVerified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotes",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalTotalVotesWithoutDeleted",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIdsReturn",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts[]",
          "name": "proposalVoteCountsArrayReturn",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "castVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "numVotes",
          "type": "uint256"
        }
      ],
      "name": "castVoteWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressToCheck",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        },
        {
          "internalType": "bool",
          "name": "voting",
          "type": "bool"
        }
      ],
      "name": "checkProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "contestAddressTotalVotesCast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalVotesCast",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestDeadline",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contestStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "proposalIds",
          "type": "uint256[]"
        }
      ],
      "name": "deleteProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "downvotingAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getNumSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "hashProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "highestTiedRanking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "isProposalDeleted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ranking",
          "type": "uint256"
        }
      ],
      "name": "isTied",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lowestRanking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAllowedProposalSubmissions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "officialRewardsModule",
      "outputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "prompt",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "proposalAddressVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalAddressesHaveVoted",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "proposalVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalVotesStructs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorCountingSimple.VoteCounts",
          "name": "proposalVoteCounts",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "proposeWithoutProof",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ranking",
          "type": "uint256"
        }
      ],
      "name": "rankingPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract RewardsModule",
          "name": "officialRewardsModule_",
          "type": "address"
        }
      ],
      "name": "setOfficialRewardsModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSortedAndTiedProposals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSortedAndTiedProposalsHasBeenRun",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sortedProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "excludeDeletedProposals",
          "type": "bool"
        }
      ],
      "name": "sortedProposals",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "sortedProposalIdsReturn",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum IGovernor.ContestState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "submissionMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tiedAdjustedRankingPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "author",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "targetAddress",
                  "type": "address"
                }
              ],
              "internalType": "struct IGovernor.TargetMetadata",
              "name": "targetMetadata",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "signers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IGovernor.SafeMetadata",
              "name": "safeMetadata",
              "type": "tuple"
            }
          ],
          "internalType": "struct IGovernor.ProposalCore",
          "name": "proposal",
          "type": "tuple"
        }
      ],
      "name": "validateProposalData",
      "outputs": [
        {
          "internalType": "bool",
          "name": "dataValidated",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifySubmitter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalVotes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "verifyTotalVotes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "verified",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingMerkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101a06040526015805460ff191690553480156200001c57600080fd5b50604051620045d5380380620045d58339810160408190526200003f9162000656565b8060008151811062000055576200005562000767565b60200260200101518160018151811062000073576200007362000767565b60200260200101518260028151811062000091576200009162000767565b602002602001015183600381518110620000af57620000af62000767565b602002602001015184600481518110620000cd57620000cd62000767565b602002602001015185600581518110620000eb57620000eb62000767565b60200260200101518a8a8a8a8181856200010a6200026b60201b60201c565b620001256000836200028860201b6200228c1790919060201c565b60e0526200014181600162000288602090811b6200228c17901c565b61010052815160208084019190912061012052815190820120610140524660a052620001d16101205161014051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05261016091909152610180526007620001f385826200080c565b5060086200020284826200080c565b50505050506200021886620002d860201b60201c565b620002238562000319565b6200022e846200035a565b620002398362000401565b620002448262000442565b6200024f8162000483565b6200025a33620004c4565b505050505050505050505062000932565b604080518082019091526003815262332e3160e81b602082015290565b6000602083511015620002a857620002a0836200052d565b9050620002d2565b82620002bf836200057060201b620022bd1760201c565b90620002cc90826200080c565b5060ff90505b92915050565b600c5460408051918252602082018390527fd299feb1d7d9345a48559601c471c3be7eea9a11f21d5e86809198f40a974db4910160405180910390a1600c55565b600d5460408051918252602082018390527fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93910160405180910390a1600d55565b60008111620003c05760405162461bcd60e51b815260206004820152602760248201527f476f7665726e6f7253657474696e67733a20766f74696e6720706572696f6420604482015266746f6f206c6f7760c81b60648201526084015b60405180910390fd5b600e5460408051918252602082018390527f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828910160405180910390a1600e55565b600f5460408051918252602082018390527fe971b819c7fb95c72451f557226aceb5baaf4994a9d39a79bbfa0040e87500b9910160405180910390a1600f55565b60105460408051918252602082018390527f4984ec996723330ee95979ed65a2a4b41edd914e68a187efe92596474643bdff910160405180910390a1601055565b60115460408051918252602082018390527f9c7b27f091caef3a83be73d89320404fa0c4a52993685ff0651672e49e6e55ab910160405180910390a1601155565b601254604080516001600160a01b03928316815291831660208301527fc30034fc2e9697980e08935bbc287db3eaa44a4aa113ef4c108b356adbf911ce910160405180910390a1601280546001600160a01b0319166001600160a01b0392909216919091179055565b600080829050601f815111156200055b578260405163305a27a960e01b8152600401620003b79190620008d8565b805162000568826200090d565b179392505050565b90565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620005b457620005b462000573565b604052919050565b60005b83811015620005d9578181015183820152602001620005bf565b50506000910152565b600082601f830112620005f457600080fd5b81516001600160401b0381111562000610576200061062000573565b62000625601f8201601f191660200162000589565b8181528460208386010111156200063b57600080fd5b6200064e826020830160208701620005bc565b949350505050565b600080600080600060a086880312156200066f57600080fd5b85516001600160401b03808211156200068757600080fd5b6200069589838a01620005e2565b9650602091508188015181811115620006ad57600080fd5b620006bb8a828b01620005e2565b9650506040880151945060608801519350608088015181811115620006df57600080fd5b8801601f81018a13620006f157600080fd5b80518281111562000706576200070662000573565b8060051b92506200071984840162000589565b818152928201840192848101908c8511156200073457600080fd5b928501925b84841015620007545783518252928501929085019062000739565b8096505050505050509295509295909350565b634e487b7160e01b600052603260045260246000fd5b600181811c908216806200079257607f821691505b602082108103620007b357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200080757600081815260208120601f850160051c81016020861015620007e25750805b601f850160051c820191505b818110156200080357828155600101620007ee565b5050505b505050565b81516001600160401b0381111562000828576200082862000573565b62000840816200083984546200077d565b84620007b9565b602080601f8311600181146200087857600084156200085f5750858301515b600019600386901b1c1916600185901b17855562000803565b600085815260208120601f198616915b82811015620008a95788860151825594840194600190910190840162000888565b5085821015620008c85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260008251806020840152620008f9816040850160208701620005bc565b601f01601f19169190910160400192915050565b80516020808301519190811015620007b35760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516101605161018051613c33620009a260003960008181610a8b0152610e200152600081816109230152610dbb01526000505060005050600061151c015260006114f20152600050506000505060005050613c336000f3fe6080604052600436106103845760003560e01c806384b0196e116101d1578063cf6afbae11610102578063e031535b116100a0578063efa90d361161006f578063efa90d3614610b7a578063f0a7db0a14610b8f578063f4f3d7ec14610baf578063fb9bf8d414610bcf57600080fd5b8063e031535b14610b0e578063e5eb5a4814610b23578063ea8a1af014610b50578063ebc18b9b14610b6557600080fd5b8063dd4e2ba5116100dc578063dd4e2ba514610a33578063dd96a19d14610a79578063dea5f6a614610aad578063deaaa7cc14610ada57600080fd5b8063cf6afbae146109e4578063d45a010b14610a04578063d889161914610a1957600080fd5b8063aec116b61161016f578063bfe45b5911610149578063bfe45b5914610945578063c19d93fb14610965578063c7f758a814610987578063cb853950146109b457600080fd5b8063aec116b6146108ae578063b323580d146108e4578063bddc16411461091157600080fd5b80638d50dc6b116101ab5780638d50dc6b1461081c578063930de9791461083c57806396f0e9621461086c578063a1ac6cb21461088157600080fd5b806384b0196e146107bf57806386187488146107e75780638a9cd5501461080757600080fd5b80634970ab2f116102b657806365f16263116102545780637c65d711116102235780637c65d711146107555780637d8bfc441461076a5780637f57a0ba1461078a578063832009af146107aa57600080fd5b806365f16263146106e25780636ca1a2c7146107025780636e4eb81014610717578063785ddfe51461073757600080fd5b8063544ffc9c11610290578063544ffc9c1461062157806354fd4d501461066b5780635f953a031461069757806360506ff6146106cd57600080fd5b80634970ab2f146105b75780634d24a67f146105d757806350a5e524146105fe57600080fd5b8063262e59e9116103235780633932abb1116102fd5780633932abb1146105285780633b6d199b1461053d578063419c533c1461056a578063427d56c21461058a57600080fd5b8063262e59e9146104bf57806332763c22146104d4578063347cf665146104f457600080fd5b806302d05d3f1161035f57806302d05d3f146103ff57806306fdde031461042c578063070dc5d91461044e5780632399c6601461049f57600080fd5b80624114a81461039257806301ffc9a7146103ba57806302a251a3146103ea57600080fd5b3661038d57005b005b600080fd5b34801561039e57600080fd5b506103a7610be4565b6040519081526020015b60405180910390f35b3480156103c657600080fd5b506103da6103d5366004612f74565b610bf4565b60405190151581526020016103b1565b3480156103f657600080fd5b506103a7610c2b565b34801561040b57600080fd5b50610414610c36565b6040516001600160a01b0390911681526020016103b1565b34801561043857600080fd5b50610441610c4a565b6040516103b19190612fe4565b34801561045a57600080fd5b50610492610469366004612ff7565b601460209081526000918252604091829020825180840190935280548352600101549082015281565b6040516103b19190613010565b3480156104ab57600080fd5b506103da6104ba366004612ff7565b610cdc565b3480156104cb57600080fd5b506103a7610d20565b3480156104e057600080fd5b506103da6104ef366004613098565b610d3c565b34801561050057600080fd5b50610510678ac7230489e8000081565b6040516001600160401b0390911681526020016103b1565b34801561053457600080fd5b506103a7610e79565b34801561054957600080fd5b506103a7610558366004612ff7565b60009081526006602052604090205490565b34801561057657600080fd5b506103a7610585366004613119565b610e84565b34801561059657600080fd5b506105aa6105a5366004613189565b610ebc565b6040516103b191906131df565b3480156105c357600080fd5b506103a76105d236600461349d565b610fe8565b3480156105e357600080fd5b506105ec600281565b60405160ff90911681526020016103b1565b34801561060a57600080fd5b5061061361102a565b6040516103b19291906134d1565b34801561062d57600080fd5b5061065661063c366004612ff7565b600090815260146020526040902080546001909101549091565b604080519283526020830191909152016103b1565b34801561067757600080fd5b50604080518082019091526003815262332e3160e81b6020820152610441565b3480156106a357600080fd5b506103a76106b236600461353a565b6001600160a01b03166000908152600b602052604090205490565b3480156106d957600080fd5b506103a7611130565b3480156106ee57600080fd5b506103a76106fd366004613557565b61113b565b34801561070e57600080fd5b506103a7611205565b34801561072357600080fd5b5061065661073236600461358c565b611231565b34801561074357600080fd5b50601b546001600160a01b0316610414565b34801561076157600080fd5b50610441611266565b34801561077657600080fd5b506103da6107853660046135bc565b611275565b34801561079657600080fd5b506103da6107a536600461349d565b6112e0565b3480156107b657600080fd5b506103a76114d9565b3480156107cb57600080fd5b506107d46114e4565b6040516103b19796959493929190613617565b3480156107f357600080fd5b506103a7610802366004612ff7565b61156c565b34801561081357600080fd5b506105aa6115a4565b34801561082857600080fd5b506103da610837366004613687565b61161e565b34801561084857600080fd5b506103da61085736600461353a565b60036020526000908152604090205460ff1681565b34801561087857600080fd5b5061038b611683565b34801561088d57600080fd5b506103a761089c36600461353a565b60136020526000908152604090205481565b3480156108ba57600080fd5b506103a76108c936600461353a565b6001600160a01b031660009081526013602052604090205490565b3480156108f057600080fd5b506109046108ff366004612ff7565b61198e565b6040516103b19190613714565b34801561091d57600080fd5b506103a77f000000000000000000000000000000000000000000000000000000000000000081565b34801561095157600080fd5b506103a7610960366004613727565b611a00565b34801561097157600080fd5b5061097a611a44565b6040516103b19190613798565b34801561099357600080fd5b506109a76109a2366004612ff7565b611ab6565b6040516103b191906137c0565b3480156109c057600080fd5b506103da6109cf36600461353a565b60046020526000908152604090205460ff1681565b3480156109f057600080fd5b506103a76109ff36600461349d565b611c29565b348015610a1057600080fd5b50610613611c5a565b348015610a2557600080fd5b506015546103da9060ff1681565b348015610a3f57600080fd5b5060408051808201909152601881527f737570706f72743d627261766f2671756f72756d3d666f7200000000000000006020820152610441565b348015610a8557600080fd5b506103a77f000000000000000000000000000000000000000000000000000000000000000081565b348015610ab957600080fd5b506103a7610ac836600461353a565b60026020526000908152604090205481565b348015610ae657600080fd5b506103a77f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b348015610b1a57600080fd5b506103a7611e25565b348015610b2f57600080fd5b506103a7610b3e366004612ff7565b60166020526000908152604090205481565b348015610b5c57600080fd5b5061038b611e37565b348015610b7157600080fd5b506103a7611f21565b348015610b8657600080fd5b506105aa611f4d565b348015610b9b57600080fd5b5061038b610baa366004613846565b611fa3565b348015610bbb57600080fd5b5061038b610bca36600461353a565b6121e6565b348015610bdb57600080fd5b506103a7612281565b6000610bef600c5490565b905090565b60006001600160e01b03198216630949aca360e11b1480610c2557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610bef600e5490565b6000610bef6012546001600160a01b031690565b606060078054610c59906138d6565b80601f0160208091040260200160405190810160405280929190818152602001828054610c85906138d6565b8015610cd25780601f10610ca757610100808354040283529160200191610cd2565b820191906000526020600020905b815481529060010190602001808311610cb557829003601f168201915b5050505050905090565b60155460009060ff16610d0a5760405162461bcd60e51b8152600401610d0190613910565b60405180910390fd5b5060009081526017602052604090205460ff1690565b6000610d2a610c2b565b610d32611e25565b610bef9190613991565b6040516bffffffffffffffffffffffff19606087901b166020820152603481018590526000908190605401604051602081830303815290604052805190602001209050600083610deb57610de68686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506122c09050565b610e4b565b610e4b8686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508691506122c09050565b905080610e6b5760405163452c2df160e11b815260040160405180910390fd5b506001979650505050505050565b6000610bef600d5490565b600033610e9381878686611275565b50610eb088828988604051806020016040528060008152506122d6565b98975050505050505050565b606060008083610ed357610ece61102a565b610edb565b610edb611c5a565b91509150600082516001600160401b03811115610efa57610efa6131f2565b604051908082528060200260200182016040528015610f23578160200160208202803683370190505b50905060005b8251811015610fa757828181518110610f4457610f446139a4565b602002602001015160200151838281518110610f6257610f626139a4565b602002602001015160000151610f7891906139ba565b828281518110610f8a57610f8a6139a4565b602090810291909101015280610f9f816139e1565b915050610f29565b5060005b60018451610fb991906139fa565b811015610fde57610fcb8183866124f0565b5080610fd6816139e1565b915050610fab565b5091949350505050565b3360009081526004602052604081205460ff166110175760405162461bcd60e51b8152600401610d0190613a0d565b611020826112e0565b50610c2582612656565b6060806000611037611f4d565b9050600081516001600160401b03811115611054576110546131f2565b60405190808252806020026020018201604052801561109957816020015b60408051808201909152600080825260208201528152602001906001900390816110725790505b50905060005b825181101561112657601460008483815181106110be576110be6139a4565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050828281518110611108576111086139a4565b6020026020010181905250808061111e906139e1565b91505061109f565b5090939092509050565b6000610bef60115490565b3360008181526003602052604081205490919060ff166111de5760405162461bcd60e51b815260206004820152605260248201527f476f7665726e6f723a20796f75206e65656420746f2063617374206120766f7460448201527f652077697468207468652070726f6f66206174206c65617374206f6e636520616064820152711b99081e5bdd481a185d995b89dd081e595d60721b608482015260a401610d01565b6111fa85828686604051806020016040528060008152506122d6565b9150505b9392505050565b60155460009060ff1661122a5760405162461bcd60e51b8152600401610d0190613910565b5060195490565b60008281526014602090815260408083206001600160a01b0385168452600301909152902080546001909101545b9250929050565b606060088054610c59906138d6565b6001600160a01b03841660009081526003602052604081205460ff166112d5576112a3858585856000610d3c565b506001600160a01b038516600090815260026020908152604080832087905560039091529020805460ff191660011790555b506001949350505050565b6000805b600281101561147b57600081600181111561130157611301613782565b9050600081600181111561131757611317613782565b036113225750611469565b600181600181111561133657611336613782565b0361146757608084015151516000036113c85760405162461bcd60e51b815260206004820152604860248201527f476f7665726e6f724d6574616461746156616c69646174696f6e3a207468657260448201527f652063616e6e6f74206265207a65726f207369676e65727320696e20736166656064820152674d6574616461746160c01b608482015260a401610d01565b8360800151602001516000036114545760405162461bcd60e51b8152602060048201526044602482018190527f476f7665726e6f724d6574616461746156616c69646174696f6e3a2074687265908201527f73686f6c642063616e6e6f74206265207a65726f20696e20736166654d6574616064820152636461746160e01b608482015260a401610d01565b6080840151515160000361146757600080fd5b505b80611473816139e1565b9150506112e4565b508160200151516000036114d15760405162461bcd60e51b815260206004820152601860248201527f476f7665726e6f723a20656d7074792070726f706f73616c00000000000000006044820152606401610d01565b506001919050565b6000610bef600f5490565b6000606080828080836115177f0000000000000000000000000000000000000000000000000000000000000000836129d8565b6115427f000000000000000000000000000000000000000000000000000000000000000060016129d8565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60155460009060ff166115915760405162461bcd60e51b8152600401610d0190613910565b5060009081526016602052604090205490565b60155460609060ff166115c95760405162461bcd60e51b8152600401610d0190613910565b6018805480602002602001604051908101604052809291908181526020018280548015610cd257602002820191906000526020600020905b815481526020019060010190808311611601575050505050905090565b6001600160a01b03831660009081526004602052604081205460ff166116795761165484678ac7230489e8000085856000610d3c565b506001600160a01b0384166000908152600460205260409020805460ff191660011790555b5060019392505050565b600461168d611a44565b600481111561169e5761169e613782565b1461171d5760405162461bcd60e51b815260206004820152604360248201527f526577617264734d6f64756c653a20636f6e74657374206d757374206265206360448201527f6f6d706c6574656420666f72207265776172647320746f2062652070616964206064820152621bdd5d60ea1b608482015260a401610d01565b60155460ff16156117ae5760405162461bcd60e51b815260206004820152604f60248201527f526577617264734d6f64756c653a20746869732066756e6374696f6e2068617360448201527f20616c7265616479206265656e2072756e20616e64206974732072657370656360648201526e1d1a5d99481d985b1d595cc81cd95d608a1b608482015260a401610d01565b6117b86001610ebc565b80516117cc91601891602090910190612e4e565b506018546000906001906117e09082613991565b601a5560005b60185481101561197c57601854600090611802906001906139fa565b905060008061184b601861181686866139fa565b81548110611826576118266139a4565b9060005260206000200154600090815260146020526040902080546001909101549091565b9092509050600061185c82846139ba565b9050846000036118a6576018549096508690611879866001613991565b0361189d5761188885856139fa565b60008781526016602052604090205560198690555b5050505061196a565b8681036118f95760008681526017602052604090205460ff166118dd576000868152601760205260409020805460ff191660011790555b6018546118eb906001613991565b601a54036118f957601a8690555b8681146119325761190a85856139fa565b611915906001613991565b6000878152601660205260409020558561192e816139e1565b9650505b601854611940866001613991565b036119645761194f85856139fa565b60008781526016602052604090205560198690555b95505050505b80611974816139e1565b9150506117e6565b50506015805460ff1916600117905550565b60008181526014602090815260409182902060028101805484518185028101850190955280855260609492938301828280156119f357602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116119d5575b5050505050915050919050565b6000611a0d33848461161e565b611a295760405162461bcd60e51b8152600401610d0190613a0d565b611a32846112e0565b50611a3c84612656565b949350505050565b60095460009060ff1615611a585750600290565b6000611a62610be4565b9050428110611a7357600091505090565b6000611a7d611e25565b9050428110611a8f5760039250505090565b6000611a99610d20565b9050428110611aac576001935050505090565b6004935050505090565b611abe612e99565b6000828152600a6020908152604091829020825160a0810190935280546001600160a01b031683526001810180549192840191611afa906138d6565b80601f0160208091040260200160405190810160405280929190818152602001828054611b26906138d6565b8015611b735780601f10611b4857610100808354040283529160200191611b73565b820191906000526020600020905b815481529060010190602001808311611b5657829003601f168201915b5050509183525050600282015460ff16151560208083019190915260408051808301825260038501546001600160a01b0316815281840152805160048501805493840282016060908101845292820184815294830194919390928492918491840182828015611c0b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611bed575b50505050508152602001600182015481525050815250509050919050565b600081604051602001611c3c91906137c0565b60408051601f19818403018152919052805160209091012092915050565b6060806000611c67611f4d565b9050600081516001600160401b03811115611c8457611c846131f2565b604051908082528060200260200182016040528015611cad578160200160208202803683370190505b509050600082516001600160401b03811115611ccb57611ccb6131f2565b604051908082528060200260200182016040528015611d1057816020015b6040805180820190915260008082526020820152815260200190600190039081611ce95790505b5090506000805b8451811015611e1957611d4f858281518110611d3557611d356139a4565b602002602001015160009081526006602052604090205490565b600114611e0757848181518110611d6857611d686139a4565b6020026020010151848381518110611d8257611d826139a4565b60200260200101818152505060146000868381518110611da457611da46139a4565b6020026020010151815260200190815260200160002060000160405180604001604052908160008201548152602001600182015481525050838381518110611dee57611dee6139a4565b6020908102919091010152611e04600183613991565b91505b80611e11816139e1565b915050611d17565b50919590945092505050565b6000611e2f610e79565b610d32610be4565b611e3f610c36565b6001600160a01b0316336001600160a01b031614611e5c57600080fd5b6000611e66611a44565b90506002816004811115611e7c57611e7c613782565b14158015611e9c57506004816004811115611e9957611e99613782565b14155b611ee85760405162461bcd60e51b815260206004820152601c60248201527f476f7665726e6f723a20636f6e74657374206e6f7420616374697665000000006044820152606401610d01565b6009805460ff191660011790556040517f4cd963a081760a54f571abc0f1db4dde31b4a07d8d6da3e844b8c6f47eeaaa4290600090a150565b60155460009060ff16611f465760405162461bcd60e51b8152600401610d0190613910565b50601a5490565b60606005805480602002602001604051908101604052809291908181526020018280548015610cd25760200282019190600052602060002090815481526020019060010190808311611601575050505050905090565b611fab610c36565b6001600160a01b0316336001600160a01b0316146120315760405162461bcd60e51b815260206004820152603760248201527f476f7665726e6f723a206f6e6c792074686520636f6e7465737420637265617460448201527f6f722063616e2064656c6574652070726f706f73616c730000000000000000006064820152608401610d01565b600461203b611a44565b600481111561204c5761204c613782565b036120d15760405162461bcd60e51b815260206004820152604960248201527f476f7665726e6f723a2064656c6574696f6e206f662070726f706f73616c732060448201527f61667465722074686520656e64206f66206120636f6e74657374206973206e6f6064820152681d08185b1b1bddd95960ba1b608482015260a401610d01565b60005b81518110156121ab57600660008383815181106120f3576120f36139a4565b602002602001015181526020019081526020016000205460011461219957600160066000848481518110612129576121296139a4565b60200260200101518152602001908152602001600020819055506040518060600160405280603d8152602001613bc1603d9139600a6000848481518110612172576121726139a4565b6020026020010151815260200190815260200160002060010190816121979190613aab565b505b806121a3816139e1565b9150506120d4565b507f75a75cf5c561892f4cc5b26c1b8e933849b42238c96dd073d080d1ae96c51416816040516121db91906131df565b60405180910390a150565b6121ee610c36565b6001600160a01b0316336001600160a01b03161461220b57600080fd5b600061221f601b546001600160a01b031690565b601b80546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091529192507f753a2cf8d360cff631674504210913e48247f8e56b3e6d2006c2103d4095999f910160405180910390a15050565b6000610bef60105490565b60006020835110156122a8576122a183612a7c565b9050610c25565b816122b38482613aab565b5060ff9392505050565b90565b6000826122cd8584612aba565b14949350505050565b600060016122e2611a44565b60048111156122f3576122f3613782565b1461234c5760405162461bcd60e51b815260206004820152602360248201527f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460448201526269766560e81b6064820152608401610d01565b600083116123b05760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f723a2063616e6e6f7420766f746520776974682030206f722060448201526a666577657220766f74657360a81b6064820152608401610d01565b6001600160a01b03851660009081526003602052604090205460ff166124565760405162461bcd60e51b815260206004820152604f60248201527f476f7665726e6f723a20796f75206e65656420746f2076657269667920796f7560448201527f72206e756d626572206f6620766f74657320616761696e737420746865206d6560648201526e1c9adb19481c9bdbdd08199a5c9cdd608a1b608482015260a401610d01565b61248886868686600260008b6001600160a01b03166001600160a01b0316815260200190815260200160002054612b07565b846001600160a01b03167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4878686866040516124c79493929190613b6a565b60405180910390a2505050506001600160a01b0316600090815260026020526040902054919050565b600083805b845181101561254e57848281518110612510576125106139a4565b602002602001015185828151811061252a5761252a6139a4565b6020026020010151121561253c578091505b80612546816139e1565b9150506124f5565b508481036125605760009150506111fe565b6000848681518110612574576125746139a4565b60200260200101519050848281518110612590576125906139a4565b60200260200101518587815181106125aa576125aa6139a4565b602002602001018181525050808583815181106125c9576125c96139a4565b60200260200101818152505060008487815181106125e9576125e96139a4565b60200260200101519050848381518110612605576126056139a4565b602002602001015185888151811061261f5761261f6139a4565b6020026020010181815250508085848151811061263e5761263e6139a4565b60209081029190910101525060019695505050505050565b60006003612662611a44565b600481111561267357612673613782565b146126e65760405162461bcd60e51b815260206004820152603e60248201527f476f7665726e6f723a20636f6e74657374206d7573742062652071756575656460448201527f20666f722070726f706f73616c7320746f206265207375626d697474656400006064820152608401610d01565b6126ee6114d9565b336000908152600b6020526040902054106127975760405162461bcd60e51b815260206004820152605d60248201527f476f7665726e6f723a207468652073616d652063616e6e6f74207375626d697460448201527f206d6f7265207468616e20746865206e756d416c6c6f77656450726f706f736160648201527f6c5375626d697373696f6e7320666f72207468697320636f6e74657374000000608482015260a401610d01565b61279f612281565b600554106128155760405162461bcd60e51b815260206004820152603960248201527f476f7665726e6f723a20746865206d6178206e756d626572206f662070726f7060448201527f6f73616c732068617665206265656e207375626d6974746564000000000000006064820152608401610d01565b600061282083611c29565b6000818152600a602052604090206002015490915060ff16156128975760405162461bcd60e51b815260206004820152602960248201527f476f7665726e6f723a206475706c69636174652070726f706f73616c73206e6f6044820152681d08185b1b1bddd95960ba1b6064820152608401610d01565b6005805460018082019092557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290556000828152600a60209081526040909120855181546001600160a01b0319166001600160a01b039091161781559085015185928201906129089082613aab565b50604082015160028201805460ff19169115159190911790556060820151516003820180546001600160a01b0319166001600160a01b03909216919091179055608082015180518051600484019161296591839160200190612f0a565b50602091820151600191820155336000908152600b9092526040822080549194509250612993908490613991565b90915550506040805182815233602082015281517fcd423cc1203c0af96b9b3d68d73b3064a69de2d14450bb7181c5e5df2132b358929181900390910190a192915050565b606060ff83146129eb576122a183612dbb565b8180546129f7906138d6565b80601f0160208091040260200160405190810160405280929190818152602001828054612a23906138d6565b8015612a705780601f10612a4557610100808354040283529160200191612a70565b820191906000526020600020905b815481529060010190602001808311612a5357829003601f168201915b50505050509050610c25565b600080829050601f81511115612aa7578260405163305a27a960e01b8152600401610d019190612fe4565b8051612ab282613b9c565b179392505050565b600081815b8451811015612aff57612aeb82868381518110612ade57612ade6139a4565b6020026020010151612dfa565b915080612af7816139e1565b915050612abf565b509392505050565b60008581526014602090815260408083206001600160a01b0388168452601390925290912054612b3790836139fa565b831115612ba25760405162461bcd60e51b815260206004820152603360248201527f476f7665726e6f72566f74696e6753696d706c653a206e6f7420656e6f756768604482015272081d9bdd195cc81b19599d081d1bc818d85cdd606a1b6064820152608401610d01565b6001600160a01b03851660009081526003820160205260409020541560ff8516612c1457815484908390600090612bda908490613991565b90915550506001600160a01b038616600090815260038301602052604081208054869290612c09908490613991565b90915550612d4e9050565b60001960ff861601612ce857612c28611130565b600114612c9f576040805162461bcd60e51b81526020600482015260248101919091527f476f7665726e6f72566f74696e6753696d706c653a20646f776e766f74696e6760448201527f206973206e6f7420656e61626c656420666f72207468697320436f6e746573746064820152608401610d01565b83826000016001016000828254612cb69190613991565b90915550506001600160a01b038616600090815260038301602052604081206001018054869290612c09908490613991565b60405162461bcd60e51b815260206004820152603560248201527f476f7665726e6f72566f74696e6753696d706c653a20696e76616c69642076616044820152746c756520666f7220656e756d20566f74655479706560581b6064820152608401610d01565b8015612d8557600282018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0388161790555b6001600160a01b03861660009081526013602052604081208054869290612dad908490613991565b909155505050505050505050565b60606000612dc883612e26565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000818310612e165760008281526020849052604090206111fe565b5060009182526020526040902090565b600060ff8216601f811115610c2557604051632cd44ac360e21b815260040160405180910390fd5b828054828255906000526020600020908101928215612e89579160200282015b82811115612e89578251825591602001919060010190612e6e565b50612e95929150612f5f565b5090565b6040518060a0016040528060006001600160a01b0316815260200160608152602001600015158152602001612ee3604051806020016040528060006001600160a01b031681525090565b8152602001612f05604051806040016040528060608152602001600081525090565b905290565b828054828255906000526020600020908101928215612e89579160200282015b82811115612e8957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612f2a565b5b80821115612e955760008155600101612f60565b600060208284031215612f8657600080fd5b81356001600160e01b0319811681146111fe57600080fd5b6000815180845260005b81811015612fc457602081850181015186830182015201612fa8565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006111fe6020830184612f9e565b60006020828403121561300957600080fd5b5035919050565b815181526020808301519082015260408101610c25565b6001600160a01b038116811461303c57600080fd5b50565b60008083601f84011261305157600080fd5b5081356001600160401b0381111561306857600080fd5b6020830191508360208260051b850101111561125f57600080fd5b8035801515811461309357600080fd5b919050565b6000806000806000608086880312156130b057600080fd5b85356130bb81613027565b94506020860135935060408601356001600160401b038111156130dd57600080fd5b6130e98882890161303f565b90945092506130fc905060608701613083565b90509295509295909350565b803560ff8116811461309357600080fd5b60008060008060008060a0878903121561313257600080fd5b8635955061314260208801613108565b9450604087013593506060870135925060808701356001600160401b0381111561316b57600080fd5b61317789828a0161303f565b979a9699509497509295939492505050565b60006020828403121561319b57600080fd5b6111fe82613083565b600081518084526020808501945080840160005b838110156131d4578151875295820195908201906001016131b8565b509495945050505050565b6020815260006111fe60208301846131a4565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561322a5761322a6131f2565b60405290565b60405160a081016001600160401b038111828210171561322a5761322a6131f2565b604051601f8201601f191681016001600160401b038111828210171561327a5761327a6131f2565b604052919050565b60006020828403121561329457600080fd5b604051602081018181106001600160401b03821117156132b6576132b66131f2565b60405290508082356132c781613027565b905292915050565b60006001600160401b038211156132e8576132e86131f2565b5060051b60200190565b60006040828403121561330457600080fd5b61330c613208565b905081356001600160401b0381111561332457600080fd5b8201601f8101841361333557600080fd5b8035602061334a613345836132cf565b613252565b82815260059290921b8301810191818101908784111561336957600080fd5b938201935b8385101561339057843561338181613027565b8252938201939082019061336e565b85525093840135938301939093525092915050565b600060a082840312156133b757600080fd5b6133bf613230565b905081356133cc81613027565b81526020828101356001600160401b03808211156133e957600080fd5b818501915085601f8301126133fd57600080fd5b81358181111561340f5761340f6131f2565b613421601f8201601f19168501613252565b818152878583860101111561343557600080fd5b818585018683013760008583830101528085870152505061345860408601613083565b604085015261346a8660608701613282565b6060850152608085013592508083111561348357600080fd5b5050613491848285016132f2565b60808301525092915050565b6000602082840312156134af57600080fd5b81356001600160401b038111156134c557600080fd5b611a3c848285016133a5565b600060408083526134e4818401866131a4565b83810360208581019190915285518083528682019282019060005b8181101561352c5761351c83865180518252602090810151910152565b93830193918501916001016134ff565b509098975050505050505050565b60006020828403121561354c57600080fd5b81356111fe81613027565b60008060006060848603121561356c57600080fd5b8335925061357c60208501613108565b9150604084013590509250925092565b6000806040838503121561359f57600080fd5b8235915060208301356135b181613027565b809150509250929050565b600080600080606085870312156135d257600080fd5b84356135dd81613027565b93506020850135925060408501356001600160401b038111156135ff57600080fd5b61360b8782880161303f565b95989497509550505050565b60ff60f81b8816815260e06020820152600061363660e0830189612f9e565b82810360408401526136488189612f9e565b606084018890526001600160a01b038716608085015260a0840186905283810360c0850152905061367981856131a4565b9a9950505050505050505050565b60008060006040848603121561369c57600080fd5b83356136a781613027565b925060208401356001600160401b038111156136c257600080fd5b6136ce8682870161303f565b9497909650939450505050565b600081518084526020808501945080840160005b838110156131d45781516001600160a01b0316875295820195908201906001016136ef565b6020815260006111fe60208301846136db565b60008060006040848603121561373c57600080fd5b83356001600160401b038082111561375357600080fd5b61375f878388016133a5565b9450602086013591508082111561377557600080fd5b506136ce8682870161303f565b634e487b7160e01b600052602160045260246000fd5b60208101600583106137ba57634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600060018060a01b03808451166020840152602084015160a060408501526137ef60c0850182612f9e565b90506040850151151560608501528160608601515116608085015260808501519150601f198482030160a085015281516040825261383060408301826136db565b6020938401519290930191909152509392505050565b6000602080838503121561385957600080fd5b82356001600160401b0381111561386f57600080fd5b8301601f8101851361388057600080fd5b803561388e613345826132cf565b81815260059190911b820183019083810190878311156138ad57600080fd5b928401925b828410156138cb578335825292840192908401906138b2565b979650505050505050565b600181811c908216806138ea57607f821691505b60208210810361390a57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526045908201527f526577617264734d6f64756c653a2072756e20736574536f72746564416e645460408201527f69656450726f706f73616c73282920746f20706f70756c61746520746869732060608201526476616c756560d81b608082015260a00190565b634e487b7160e01b600052601160045260246000fd5b80820180821115610c2557610c2561397b565b634e487b7160e01b600052603260045260246000fd5b81810360008312801583831316838312821617156139da576139da61397b565b5092915050565b6000600182016139f3576139f361397b565b5060010190565b81810381811115610c2557610c2561397b565b6020808252602f908201527f476f7665726e6f723a2061646472657373206973206e6f74207065726d69737360408201526e1a5bdb9959081d1bc81cdd589b5a5d608a1b606082015260800190565b601f821115613aa657600081815260208120601f850160051c81016020861015613a835750805b601f850160051c820191505b81811015613aa257828155600101613a8f565b5050505b505050565b81516001600160401b03811115613ac457613ac46131f2565b613ad881613ad284546138d6565b84613a5c565b602080601f831160018114613b0d5760008415613af55750858301515b600019600386901b1c1916600185901b178555613aa2565b600085815260208120601f198616915b82811015613b3c57888601518255948401946001909101908401613b1d565b5085821015613b5a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b84815260ff84166020820152826040820152608060608201526000613b926080830184612f9e565b9695505050505050565b8051602080830151919081101561390a5760001960209190910360031b1b1691905056fe546869732070726f706f73616c20686173206265656e2064656c65746564206279207468652063726561746f72206f662074686520636f6e746573742ea26469706673582212201edcc648acbdb7419826f7229daf334a983b645bff9d1b17ce1fe0f3d286f33d64736f6c63430008120033",
    "sourceMap": "271:1911:36:-:0;;;273:55:43;;;-1:-1:-1;;273:55:43;;;365:716:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:21;700:1;678:24;;;;;;;;:::i;:::-;;;;;;;740:21;762:1;740:24;;;;;;;;:::i;:::-;;;;;;;802:21;824:1;802:24;;;;;;;;:::i;:::-;;;;;;;865:21;887:1;865:24;;;;;;;;:::i;:::-;;;;;;;945:21;967:1;945:24;;;;;;;;:::i;:::-;;;;;;;1011:21;1033:1;1011:24;;;;;;;;:::i;:::-;;;;;;;582:5;589:7;598:21;621:17;2350:21:37;2373:17;2407:5;2414:9;:7;;;:9;;:::i;:::-;3251:45:28;3282:13;3251:4;:30;;;;;;:45;;;;:::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;;;;;;;:51;;:::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;5649:25:47;5690:18;;;5683:34;;;;5733:18;;;5726:34;4106:13:28;5776:18:47;;;5769:34;4129:4:28;5819:19:47;;;5812:61;4018:7:28;;5621:19:47;;4054:81:28;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:28;3575:27;;894:44:38;;;;;963:36;;2439:5:37::2;:13;2447:5:::0;2439;:13:::2;:::i;:::-;-1:-1:-1::0;2462:7:37::2;:17;2472:7:::0;2462;:17:::2;:::i;:::-;;2208:278:::0;;;;1591:37:42;1608:19;1591:16;;;:37;;:::i;:::-;1638:35;1654:18;1638:15;:35::i;:::-;1683:37;1700:19;1683:16;:37::i;:::-;1730:71;1764:36;1730:33;:71::i;:::-;1811:45;1832:23;1811:20;:45::i;:::-;1866:47;1888:24;1866:21;:47::i;:::-;1923:23;1935:10;1923:11;:23::i;:::-;1316:637;;;;;;365:716:36;;;;;271:1911;;3380:101:37;3462:12;;;;;;;;;;;;-1:-1:-1;;;3462:12:37;;;;;3380:101::o;2457:341:23:-;2553:11;2602:2;2586:5;2580:19;:24;2576:216;;;2627:20;2641:5;2627:13;:20::i;:::-;2620:27;;;;2576:216;2719:5;2678:32;2704:5;2678:25;;;;;:32;;:::i;:::-;:38;:46;;:38;:46;:::i;:::-;-1:-1:-1;933:66:23;;-1:-1:-1;2576:216:23;2457:341;;;;:::o;3355:178:42:-;3454:13;;3438:47;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;3438:47:42;;6031:18:47;3438:47:42;;;;;;;3495:13;:31;3355:178::o;3651:171::-;3747:12;;3732:44;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;3732:44:42;;6031:18:47;3732:44:42;;;;;;;3786:12;:29;3651:171::o;3942:316::-;4103:1;4085:15;:19;4077:71;;;;-1:-1:-1;;;4077:71:42;;6339:2:47;4077:71:42;;;6321:21:47;6378:2;6358:18;;;6351:30;6417:34;6397:18;;;6390:62;-1:-1:-1;;;6468:18:47;;;6461:37;6515:19;;4077:71:42;;;;;;;;;4179:13;;4163:47;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;4163:47:42;;6031:18:47;4163:47:42;;;;;;;4220:13;:31;3942:316::o;4445:297::-;4595:30;;4562:98;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;4562:98:42;;6031:18:47;4562:98:42;;;;;;;4670:30;:65;4445:297::o;4871:206::-;4982:17;;4962:59;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;4962:59:42;;6031:18:47;4962:59:42;;;;;;;5031:17;:39;4871:206::o;5209:213::-;5323:18;;5302:62;;;6058:25:47;;;6114:2;6099:18;;6092:34;;;5302:62:42;;6031:18:47;5302:62:42;;;;;;;5374:18;:41;5209:213::o;5527:143::-;5611:8;;5600:32;;;-1:-1:-1;;;;;5611:8:42;;;6757:34:47;;6827:15;;;6822:2;6807:18;;6800:43;5600:32:42;;6692:18:47;5600:32:42;;;;;;;5642:8;:21;;-1:-1:-1;;;;;;5642:21:42;-1:-1:-1;;;;;5642:21:42;;;;;;;;;;5527:143::o;1251:286:23:-;1316:11;1339:17;1365:3;1339:30;;1397:2;1383:4;:11;:16;1379:72;;;1436:3;1422:18;;-1:-1:-1;;;1422:18:23;;;;;;;;:::i;1379:72::-;1517:11;;1500:13;1517:4;1500:13;:::i;:::-;1492:36;;1251:286;-1:-1:-1;;;1251:286:23:o;3310:202:24:-;3486:10;3310:202::o;14:127:47:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:47;247:40;;-1:-1:-1;;;;;302:34:47;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:47:o;426:250::-;511:1;521:113;535:6;532:1;529:13;521:113;;;611:11;;;605:18;592:11;;;585:39;557:2;550:10;521:113;;;-1:-1:-1;;668:1:47;650:16;;643:27;426:250::o;681:510::-;735:5;788:3;781:4;773:6;769:17;765:27;755:55;;806:1;803;796:12;755:55;829:13;;-1:-1:-1;;;;;854:26:47;;851:52;;;883:18;;:::i;:::-;927:55;970:2;951:13;;-1:-1:-1;;947:27:47;976:4;943:38;927:55;:::i;:::-;1007:2;998:7;991:19;1053:3;1046:4;1041:2;1033:6;1029:15;1025:26;1022:35;1019:55;;;1070:1;1067;1060:12;1019:55;1083:77;1157:2;1150:4;1141:7;1137:18;1130:4;1122:6;1118:17;1083:77;:::i;:::-;1178:7;681:510;-1:-1:-1;;;;681:510:47:o;1196:1468::-;1347:6;1355;1363;1371;1379;1432:3;1420:9;1411:7;1407:23;1403:33;1400:53;;;1449:1;1446;1439:12;1400:53;1476:16;;-1:-1:-1;;;;;1541:14:47;;;1538:34;;;1568:1;1565;1558:12;1538:34;1591:61;1644:7;1635:6;1624:9;1620:22;1591:61;:::i;:::-;1581:71;;1671:2;1661:12;;1719:2;1708:9;1704:18;1698:25;1748:2;1738:8;1735:16;1732:36;;;1764:1;1761;1754:12;1732:36;1787:63;1842:7;1831:8;1820:9;1816:24;1787:63;:::i;:::-;1777:73;;;1890:2;1879:9;1875:18;1869:25;1859:35;;1934:2;1923:9;1919:18;1913:25;1903:35;;1984:3;1973:9;1969:19;1963:26;2014:2;2004:8;2001:16;1998:36;;;2030:1;2027;2020:12;1998:36;2053:24;;2108:4;2100:13;;2096:27;-1:-1:-1;2086:55:47;;2137:1;2134;2127:12;2086:55;2166:2;2160:9;2188:2;2184;2181:10;2178:36;;;2194:18;;:::i;:::-;2240:2;2237:1;2233:10;2223:20;;2263:28;2287:2;2283;2279:11;2263:28;:::i;:::-;2325:15;;;2395:11;;;2391:20;;;2356:12;;;;2423:19;;;2420:39;;;2455:1;2452;2445:12;2420:39;2479:11;;;;2499:135;2515:6;2510:3;2507:15;2499:135;;;2581:10;;2569:23;;2532:12;;;;2612;;;;2499:135;;;2653:5;2643:15;;;;;;;;1196:1468;;;;;;;;:::o;2669:127::-;2730:10;2725:3;2721:20;2718:1;2711:31;2761:4;2758:1;2751:15;2785:4;2782:1;2775:15;2801:380;2880:1;2876:12;;;;2923;;;2944:61;;2998:4;2990:6;2986:17;2976:27;;2944:61;3051:2;3043:6;3040:14;3020:18;3017:38;3014:161;;3097:10;3092:3;3088:20;3085:1;3078:31;3132:4;3129:1;3122:15;3160:4;3157:1;3150:15;3014:161;;2801:380;;;:::o;3312:545::-;3414:2;3409:3;3406:11;3403:448;;;3450:1;3475:5;3471:2;3464:17;3520:4;3516:2;3506:19;3590:2;3578:10;3574:19;3571:1;3567:27;3561:4;3557:38;3626:4;3614:10;3611:20;3608:47;;;-1:-1:-1;3649:4:47;3608:47;3704:2;3699:3;3695:12;3692:1;3688:20;3682:4;3678:31;3668:41;;3759:82;3777:2;3770:5;3767:13;3759:82;;;3822:17;;;3803:1;3792:13;3759:82;;;3763:3;;;3403:448;3312:545;;;:::o;4033:1352::-;4153:10;;-1:-1:-1;;;;;4175:30:47;;4172:56;;;4208:18;;:::i;:::-;4237:97;4327:6;4287:38;4319:4;4313:11;4287:38;:::i;:::-;4281:4;4237:97;:::i;:::-;4389:4;;4453:2;4442:14;;4470:1;4465:663;;;;5172:1;5189:6;5186:89;;;-1:-1:-1;5241:19:47;;;5235:26;5186:89;-1:-1:-1;;3990:1:47;3986:11;;;3982:24;3978:29;3968:40;4014:1;4010:11;;;3965:57;5288:81;;4435:944;;4465:663;3259:1;3252:14;;;3296:4;3283:18;;-1:-1:-1;;4501:20:47;;;4619:236;4633:7;4630:1;4627:14;4619:236;;;4722:19;;;4716:26;4701:42;;4814:27;;;;4782:1;4770:14;;;;4649:19;;4619:236;;;4623:3;4883:6;4874:7;4871:19;4868:201;;;4944:19;;;4938:26;-1:-1:-1;;5027:1:47;5023:14;;;5039:3;5019:24;5015:37;5011:42;4996:58;4981:74;;4868:201;-1:-1:-1;;;;;5115:1:47;5099:14;;;5095:22;5082:36;;-1:-1:-1;4033:1352:47:o;6854:396::-;7003:2;6992:9;6985:21;6966:4;7035:6;7029:13;7078:6;7073:2;7062:9;7058:18;7051:34;7094:79;7166:6;7161:2;7150:9;7146:18;7141:2;7133:6;7129:15;7094:79;:::i;:::-;7234:2;7213:15;-1:-1:-1;;7209:29:47;7194:45;;;;7241:2;7190:54;;6854:396;-1:-1:-1;;6854:396:47:o;7255:297::-;7373:12;;7420:4;7409:16;;;7403:23;;7373:12;7438:16;;7435:111;;;-1:-1:-1;;7512:4:47;7508:17;;;;7505:1;7501:25;7497:38;7486:50;;7255:297;-1:-1:-1;7255:297:47:o;:::-;271:1911:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;;160:25:47;;;148:2;133:18;1155:136:36;;;;;;;;2793:214:37;;;;;;;;;;-1:-1:-1;2793:214:37;;;;;:::i;:::-;;:::i;:::-;;;652:14:47;;645:22;627:41;;615:2;600:18;2793:214:37;487:187:47;1437:136:36;;;;;;;;;;;;;:::i;2054:126::-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;843:32:47;;;825:51;;813:2;798:18;2054:126:36;679:203:47;3063:98:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;793:60:40:-;;;;;;;;;;-1:-1:-1;793:60:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;950:249:43:-;;;;;;;;;;-1:-1:-1;950:249:43;;;;;:::i;:::-;;:::i;5740:126:37:-;;;;;;;;;;;;;:::i;1304:539:38:-;;;;;;;;;;-1:-1:-1;1304:539:38;;;;;:::i;:::-;;:::i;1158:72:37:-;;;;;;;;;;;;1210:20;1158:72;;;;;-1:-1:-1;;;;;3692:31:47;;;3674:50;;3662:2;3647:18;1158:72:37;3530:200:47;1297:134:36;;;;;;;;;;;;;:::i;7012:140:37:-;;;;;;;;;;-1:-1:-1;7012:140:37;;;;;:::i;:::-;7088:7;7114:31;;;:19;:31;;;;;;;7012:140;12750:360;;;;;;;;;;-1:-1:-1;12750:360:37;;;;;:::i;:::-;;:::i;5071:926:43:-;;;;;;;;;;-1:-1:-1;5071:926:43;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9659:294:37:-;;;;;;;;;;-1:-1:-1;9659:294:37;;;;;:::i;:::-;;:::i;433:41:39:-;;;;;;;;;;;;473:1;433:41;;;;;9989:4:47;9977:17;;;9959:36;;9947:2;9932:18;433:41:39;9817:184:47;2612:566:43;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;1193:302:40:-;;;;;;;;;;-1:-1:-1;1193:302:40;;;;;:::i;:::-;1265:16;1351:32;;;:20;:32;;;;;1401:40;;1443:44;;;;;1401:40;;1193:302;;;;;11090:25:47;;;11146:2;11131:18;;11124:34;;;;11063:18;1193:302:40;10916:248:47;3380:101:37;;;;;;;;;;-1:-1:-1;3462:12:37;;;;;;;;;;;;-1:-1:-1;;;3462:12:37;;;;3380:101;;6764:130;;;;;;;;;;-1:-1:-1;6764:130:37;;;;;:::i;:::-;-1:-1:-1;;;;;6863:24:37;6837:7;6863:24;;;:15;:24;;;;;;;6764:130;1903:145:36;;;;;;;;;;;;;:::i;13182:445:37:-;;;;;;;;;;-1:-1:-1;13182:445:37;;;;;:::i;:::-;;:::i;1958:242:43:-;;;;;;;;;;;;;:::i;1598:424:40:-;;;;;;;;;;-1:-1:-1;1598:424:40;;;;;:::i;:::-;;:::i;536:123:41:-;;;;;;;;;;-1:-1:-1;630:22:41;;-1:-1:-1;;;;;630:22:41;536:123;;3219:102:37;;;;;;;;;;;;;:::i;12232:458::-;;;;;;;;;;-1:-1:-1;12232:458:37;;;;;:::i;:::-;;:::i;8003:1184::-;;;;;;;;;;-1:-1:-1;8003:1184:37;;;;;:::i;:::-;;:::i;1579:169:36:-;;;;;;;;;;;;;:::i;4983:633:28:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;1286:281:43:-;;;;;;;;;;-1:-1:-1;1286:281:43;;;;;:::i;:::-;;:::i;1632:261::-;;;;;;;;;;;;;:::i;7561:370:37:-;;;;;;;;;;-1:-1:-1;7561:370:37;;;;;:::i;:::-;;:::i;1294:57::-;;;;;;;;;;-1:-1:-1;1294:57:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;6423:3150:43;;;;;;;;;;;;;:::i;726:61:40:-;;;;;;;;;;-1:-1:-1;726:61:40;;;;;:::i;:::-;;;;;;;;;;;;;;2468:177;;;;;;;;;;-1:-1:-1;2468:177:40;;;;;:::i;:::-;-1:-1:-1;;;;;2598:39:40;2556:22;2598:39;;;:26;:39;;;;;;;2468:177;2123:234;;;;;;;;;;-1:-1:-1;2123:234:40;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;378:45:38:-;;;;;;;;;;;;;;;9246:342:37;;;;;;;;;;-1:-1:-1;9246:342:37;;;;;:::i;:::-;;:::i;4647:675::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6533:137::-;;;;;;;;;;-1:-1:-1;6533:137:37;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1357:56::-;;;;;;;;;;-1:-1:-1;1357:56:37;;;;;:::i;:::-;;;;;;;;;;;;;;;;4427:163;;;;;;;;;;-1:-1:-1;4427:163:37;;;;;:::i;:::-;;:::i;3303:952:43:-;;;;;;;;;;;;;:::i;273:55::-;;;;;;;;;;-1:-1:-1;273:55:43;;;;;;;;972:128:40;;;;;;;;;;-1:-1:-1;1060:33:40;;;;;;;;;;;;;;;;;972:128;;429:41:38;;;;;;;;;;;;;;;1236:52:37;;;;;;;;;;-1:-1:-1;1236:52:37;;;;;:::i;:::-;;;;;;;;;;;;;;1057:95;;;;;;;;;;;;1099:53;1057:95;;5551:122;;;;;;;;;;;;;:::i;334:62:43:-;;;;;;;;;;-1:-1:-1;334:62:43;;;;;:::i;:::-;;;;;;;;;;;;;;11864:300:37;;;;;;;;;;;;;:::i;2267:252:43:-;;;;;;;;;;;;;:::i;5378:112:37:-;;;;;;;;;;;;;:::i;11020:753::-;;;;;;;;;;-1:-1:-1;11020:753:37;;;;;:::i;:::-;;:::i;781:356:41:-;;;;;;;;;;-1:-1:-1;781:356:41;;;;;:::i;:::-;;:::i;1754:143:36:-;;;;;;;;;;;;;:::i;1155:136::-;1238:7;1264:20;2105:13:42;;;2017:108;1264:20:36;1257:27;;1155:136;:::o;2793:214:37:-;2895:4;-1:-1:-1;;;;;;2918:42:37;;-1:-1:-1;;;2918:42:37;;:82;;-1:-1:-1;;;;;;;;;;937:40:31;;;2964:36:37;2911:89;2793:214;-1:-1:-1;;2793:214:37:o;1437:136:36:-;1520:7;1546:20;2446:13:42;;;2358:108;2054:126:36;2132:7;2158:15;3221:8:42;;-1:-1:-1;;;;;3221:8:42;;3138:98;3063::37;3117:13;3149:5;3142:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3063:98;:::o;950:249:43:-;1041:35;;1004:4;;1041:35;;1020:139;;;;-1:-1:-1;;;1020:139:43;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;1176:16:43;;;;:7;:16;;;;;;;;;950:249::o;5740:126:37:-;5805:7;5845:14;:12;:14::i;:::-;5831:11;:9;:11::i;:::-;:28;;;;:::i;1304:539:38:-;1559:40;;-1:-1:-1;;20016:2:47;20012:15;;;20008:53;1559:40:38;;;19996:66:47;20078:12;;;20071:28;;;1448:13:38;;;;20115:12:47;;1559:40:38;;;;;;;;;;;;1549:51;;;;;;1534:66;;1610:16;1629:6;:138;;1714:53;1733:5;;1714:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1740:20:38;;-1:-1:-1;1762:4:38;;-1:-1:-1;1714:18:38;;-1:-1:-1;1714:53:38:i;:::-;1629:138;;;1650:49;1669:5;;1650:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1676:16:38;;-1:-1:-1;1694:4:38;;-1:-1:-1;1650:18:38;;-1:-1:-1;1650:49:38:i;:::-;1610:157;;1782:11;1777:38;;1802:13;;-1:-1:-1;;;1802:13:38;;;;;;;;;;;1777:38;-1:-1:-1;1832:4:38;;1304:539;-1:-1:-1;;;;;;;1304:539:38:o;1297:134:36:-;1379:7;1405:19;2275:12:42;;;2188:106;12750:360:37;12932:7;719:10:22;12993:42:37;719:10:22;13017::37;13029:5;;12993:16;:42::i;:::-;;13052:51;13062:10;13074:5;13081:7;13090:8;13052:51;;;;;;;;;;;;:9;:51::i;:::-;13045:58;12750:360;-1:-1:-1;;;;;;;;12750:360:37:o;5071:926:43:-;5187:40;5244:31;5277:43;5336:23;:89;;5402:23;:21;:23::i;:::-;5336:89;;;5362:37;:35;:37::i;:::-;5243:182;;;;5435:32;5483:14;:21;-1:-1:-1;;;;;5470:35:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5470:35:43;;5435:70;;5520:9;5515:217;5539:23;:30;5535:1;:34;5515:217;;;5681:23;5705:1;5681:26;;;;;;;;:::i;:::-;;;;;;;:39;;;5635:23;5659:1;5635:26;;;;;;;;:::i;:::-;;;;;;;:35;;;5628:93;;;;:::i;:::-;5590:16;5607:1;5590:19;;;;;;;;:::i;:::-;;;;;;;;;;:131;5571:3;;;;:::i;:::-;;;;5515:217;;;;5746:9;5741:219;5789:1;5765:14;:21;:25;;;;:::i;:::-;5761:1;:29;5741:219;;;5903:46;5913:1;5916:16;5934:14;5903:9;:46::i;:::-;-1:-1:-1;5792:3:43;;;;:::i;:::-;;;;5741:219;;;-1:-1:-1;5976:14:43;;5071:926;-1:-1:-1;;;;5071:926:43:o;9659:294:37:-;9803:10;9751:7;9778:36;;;:24;:36;;;;;;;;9770:96;;;;-1:-1:-1;;;9770:96:37;;;;;;;:::i;:::-;9876:30;9897:8;9876:20;:30::i;:::-;;9923:23;9937:8;9923:13;:23::i;2612:566:43:-;2706:34;2742:49;2807:28;2838:19;:17;:19::i;:::-;2807:50;;2867:43;2930:11;:18;-1:-1:-1;;;;;2913:36:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2913:36:43;;;;;;;;;;;;;;;;2867:82;;2964:9;2959:158;2983:11;:18;2979:1;:22;2959:158;;;3051:20;:36;3072:11;3084:1;3072:14;;;;;;;;:::i;:::-;;;;;;;3051:36;;;;;;;;;;;:55;;3022:84;;;;;;;;;;;;;;;;;;;;;;;;;:23;3046:1;3022:26;;;;;;;;:::i;:::-;;;;;;:84;;;;3003:3;;;;;:::i;:::-;;;;2959:158;;;-1:-1:-1;3134:11:43;;3147:23;;-1:-1:-1;2612:566:43;-1:-1:-1;2612:566:43:o;1903:145:36:-;1990:7;2016:25;3054:18:42;;;2961:118;13182:445:37;719:10:22;13330:7:37;13412:32;;;:25;:32;;;;;;13330:7;;719:10:22;13412:32:37;;13391:161;;;;-1:-1:-1;;;13391:161:37;;21366:2:47;13391:161:37;;;21348:21:47;21405:2;21385:18;;;21378:30;21444:34;21424:18;;;21417:62;21515:34;21495:18;;;21488:62;-1:-1:-1;;;21566:19:47;;;21559:49;21625:19;;13391:161:37;21164:486:47;13391:161:37;13569:51;13579:10;13591:5;13598:7;13607:8;13569:51;;;;;;;;;;;;:9;:51::i;:::-;13562:58;;;13182:445;;;;;;:::o;1958:242:43:-;2044:35;;2004:7;;2044:35;;2023:139;;;;-1:-1:-1;;;2023:139:43;;;;;;;:::i;:::-;-1:-1:-1;2179:14:43;;;1958:242::o;1598:424:40:-;1730:16;1820:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;1883:43:40;;;;:30;;:43;;;;;:52;;1949:56;;;;;1598:424;;;;;;:::o;3219:102:37:-;3275:13;3307:7;3300:14;;;;;:::i;12232:458::-;-1:-1:-1;;;;;12404:34:37;;12370:13;12404:34;;;:25;:34;;;;;;;;12399:264;;12454:45;12465:7;12474:10;12486:5;;12493;12454:10;:45::i;:::-;-1:-1:-1;;;;;;12558:26:37;;;;;;:17;:26;;;;;;;;:39;;;12611:25;:34;;;;;:41;;-1:-1:-1;;12611:41:37;12648:4;12611:41;;;12399:264;-1:-1:-1;12679:4:37;12232:458;;;;;;:::o;8003:1184::-;8096:18;;8126:869;473:1:39;8150:23:37;;8126:869;;;8198:25;8236:5;8226:16;;;;;;;;:::i;:::-;8198:44;-1:-1:-1;8279:16:37;8260:15;:35;;;;;;;;:::i;:::-;;8256:729;;8315:8;;;8256:729;8424:14;8405:15;:33;;;;;;;;:::i;:::-;;8401:584;;8487:21;;;;:29;:36;:29;:41;8458:184;;;;-1:-1:-1;;;8458:184:37;;21857:2:47;8458:184:37;;;21839:21:47;21896:2;21876:18;;;21869:30;21935:34;21915:18;;;21908:62;22006:34;21986:18;;;21979:62;-1:-1:-1;;;22057:19:47;;;22050:39;22106:19;;8458:184:37;21655:476:47;8458:184:37;8689:8;:21;;;:31;;;8724:1;8689:36;8660:175;;;;-1:-1:-1;;;8660:175:37;;22338:2:47;8660:175:37;;;22320:21:47;22377:2;22357:18;;;22350:30;;;22416:34;22396:18;;;22389:62;22487:34;22467:18;;;22460:62;-1:-1:-1;;;22538:19:47;;;22531:35;22583:19;;8660:175:37;22136:472:47;8660:175:37;8861:21;;;;:29;:36;:29;:41;8853:50;;;;;;8184:811;8126:869;8175:7;;;;:::i;:::-;;;;8126:869;;;;9097:8;:20;;;9091:34;9129:1;9091:39;9083:76;;;;-1:-1:-1;;;9083:76:37;;22815:2:47;9083:76:37;;;22797:21:47;22854:2;22834:18;;;22827:30;22893:26;22873:18;;;22866:54;22937:18;;9083:76:37;22613:348:47;9083:76:37;-1:-1:-1;9176:4:37;;8003:1184;-1:-1:-1;8003:1184:37:o;1579:169:36:-;1678:7;1704:37;2651:30:42;;;2546:142;4983:633:28;5098:13;5125:18;;5098:13;;;5125:18;5389:41;:5;5098:13;5389:26;:41::i;:::-;5444:47;:8;5474:16;5444:29;:47::i;:::-;5583:16;;;5567:1;5583:16;;;;;;;;;-1:-1:-1;;;5338:271:28;;;-1:-1:-1;5338:271:28;;-1:-1:-1;5505:13:28;;-1:-1:-1;5540:4:28;;-1:-1:-1;5567:1:28;-1:-1:-1;5583:16:28;-1:-1:-1;5338:271:28;-1:-1:-1;4983:633:28:o;1286:281:43:-;1389:35;;1349:7;;1389:35;;1368:139;;;;-1:-1:-1;;;1368:139:43;;;;;;;:::i;:::-;-1:-1:-1;1524:36:43;;;;:27;:36;;;;;;;1286:281::o;1632:261::-;1731:35;;1682:16;;1731:35;;1710:139;;;;-1:-1:-1;;;1710:139:43;;;;;;;:::i;:::-;1867:18;1859:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1632:261;:::o;7561:370:37:-;-1:-1:-1;;;;;7684:33:37;;7654:13;7684:33;;;:24;:33;;;;;;;;7679:225;;7733:61;7744:7;1210:20;7781:5;;7788;7733:10;:61::i;:::-;-1:-1:-1;;;;;;7853:33:37;;;;;;:24;:33;;;;;:40;;-1:-1:-1;;7853:40:37;7889:4;7853:40;;;7679:225;-1:-1:-1;7920:4:37;7561:370;;;;;:::o;6423:3150:43:-;6517:32;6506:7;:5;:7::i;:::-;:43;;;;;;;;:::i;:::-;;6485:157;;;;-1:-1:-1;;;6485:157:43;;23168:2:47;6485:157:43;;;23150:21:47;23207:2;23187:18;;;23180:30;23246:34;23226:18;;;23219:62;23317:34;23297:18;;;23290:62;-1:-1:-1;;;23368:19:47;;;23361:34;23412:19;;6485:157:43;22966:471:47;6485:157:43;6673:35;;;;:44;6652:170;;;;-1:-1:-1;;;6652:170:43;;23644:2:47;6652:170:43;;;23626:21:47;23683:2;23663:18;;;23656:30;23722:34;23702:18;;;23695:62;23793:34;23773:18;;;23766:62;-1:-1:-1;;;23844:19:47;;;23837:46;23900:19;;6652:170:43;23442:483:47;6652:170:43;6854:21;6870:4;6854:15;:21::i;:::-;6833:42;;;;:18;;:42;;;;;;:::i;:::-;-1:-1:-1;6980:18:43;:25;6886:21;;6947:1;;6980:29;;6947:1;6980:29;:::i;:::-;6958:19;:51;7082:9;7077:2437;7101:18;:25;7097:29;;7077:2437;;;7177:18;:25;7147:27;;7177:29;;7205:1;;7177:29;:::i;:::-;7147:59;-1:-1:-1;7281:23:43;;7353:58;7367:18;7386:23;7408:1;7147:59;7386:23;:::i;:::-;7367:43;;;;;;;;:::i;:::-;;;;;;;;;1265:16:40;1351:32;;;:20;:32;;;;;1401:40;;1443:44;;;;;1401:40;;1193:302;7353:58:43;7280:131;;-1:-1:-1;7280:131:43;-1:-1:-1;7425:24:43;7452:53;7280:131;;7452:53;:::i;:::-;7425:80;;7589:1;7594;7589:6;7585:478;;7822:18;:25;7632:17;;-1:-1:-1;7632:17:43;;7813:5;:1;7817;7813:5;:::i;:::-;:34;7809:213;;7922:23;7944:1;7922:19;:23;:::i;:::-;7871:48;;;;:27;:48;;;;;:74;7967:14;:36;;;7809:213;8040:8;;;;;;7585:478;8167:14;8146:17;:35;8142:481;;8206:28;;;;:7;:28;;;;;;;;8201:161;;8308:28;;;;:7;:28;;;;;:35;;-1:-1:-1;;8308:35:43;8339:4;8308:35;;;8201:161;8406:18;:25;:29;;8434:1;8406:29;:::i;:::-;8383:19;;:52;8379:230;;8549:19;:41;;;8379:230;8856:14;8835:17;:35;8831:291;;9041:23;9063:1;9041:19;:23;:::i;:::-;:27;;9067:1;9041:27;:::i;:::-;8990:48;;;;:27;:48;;;;;:78;9018:19;9086:21;9018:19;9086:21;:::i;:::-;;;;8831:291;9267:18;:25;9258:5;:1;9262;9258:5;:::i;:::-;:34;9254:201;;9363:23;9385:1;9363:19;:23;:::i;:::-;9312:48;;;;:27;:48;;;;;:74;9404:14;:36;;;9254:201;9486:17;-1:-1:-1;;;;7077:2437:43;7128:3;;;;:::i;:::-;;;;7077:2437;;;-1:-1:-1;;9524:35:43;:42;;-1:-1:-1;;9524:42:43;9562:4;9524:42;;;-1:-1:-1;6423:3150:43:o;2123:234:40:-;2236:33;2272:32;;;:20;:32;;;;;;;;;2322:27;;;2314:36;;;;;;;;;;;;;;;;;2208:16;;2272:32;;2314:36;;2322:27;2314:36;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2314:36:40;;;;;;;;;;;;;;;;;;;;;;;;2123:234;;;:::o;9246:342:37:-;9384:7;9415:34;9431:10;9443:5;;9415:15;:34::i;:::-;9407:94;;;;-1:-1:-1;;;9407:94:37;;;;;;;:::i;:::-;9511:30;9532:8;9511:20;:30::i;:::-;;9558:23;9572:8;9558:13;:23::i;:::-;9551:30;9246:342;-1:-1:-1;;;;9246:342:37:o;4647:675::-;4730:9;;4702:12;;4730:9;;4726:68;;;-1:-1:-1;4762:21:37;;4647:675::o;4726:68::-;4804:29;4836:14;:12;:14::i;:::-;4804:46;;4890:15;4865:21;:40;4861:101;;4928:23;4921:30;;;4647:675;:::o;4861:101::-;4972:26;5001:11;:9;:11::i;:::-;4972:40;;5049:15;5027:18;:37;5023:94;;5087:19;5080:26;;;;4647:675;:::o;5023:94::-;5127:25;5155:17;:15;:17::i;:::-;5127:45;;5208:15;5187:17;:36;5183:93;;5246:19;5239:26;;;;;4647:675;:::o;5183:93::-;5293:22;5286:29;;;;;4647:675;:::o;6533:137::-;6603:19;;:::i;:::-;6641:22;;;;:10;:22;;;;;;;;;6634:29;;;;;;;;;;-1:-1:-1;;;;;6634:29:37;;;;;;;;6641:22;;6634:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6634:29:37;;;-1:-1:-1;;6634:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6634:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6634:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6533:137;;;:::o;4427:163::-;4517:7;4572:8;4561:20;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4561:20:37;;;;;;;;;4551:31;;4561:20;4551:31;;;;;4427:163;-1:-1:-1;;4427:163:37:o;3303:952:43:-;3411:34;3447:49;3512:28;3543:19;:17;:19::i;:::-;3512:50;;3572:42;3631:11;:18;-1:-1:-1;;;;;3617:33:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3617:33:43;;3572:78;;3660:43;3723:11;:18;-1:-1:-1;;;;;3706:36:43;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3706:36:43;;;;;;;;;;;;;;;;3660:82;;3753:29;3801:9;3796:384;3820:11;:18;3816:1;:22;3796:384;;;3865:33;3883:11;3895:1;3883:14;;;;;;;;:::i;:::-;;;;;;;7088:7:37;7114:31;;;:19;:31;;;;;;;7012:140;3865:33:43;3902:1;3865:38;3859:311;;3975:11;3987:1;3975:14;;;;;;;;:::i;:::-;;;;;;;3924:25;3950:21;3924:48;;;;;;;;:::i;:::-;;;;;;:65;;;;;4056:20;:36;4077:11;4089:1;4077:14;;;;;;;;:::i;:::-;;;;;;;4056:36;;;;;;;;;;;:55;;4007:104;;;;;;;;;;;;;;;;;;;;;;;;;:23;4031:21;4007:46;;;;;;;;:::i;:::-;;;;;;;;;;:104;4129:26;4154:1;4129:26;;:::i;:::-;;;3859:311;3840:3;;;;:::i;:::-;;;;3796:384;;;-1:-1:-1;4197:25:43;;4224:23;;-1:-1:-1;3303:952:43;-1:-1:-1;;;3303:952:43:o;5551:122:37:-;5610:7;5653:13;:11;:13::i;:::-;5636:14;:12;:14::i;11864:300::-;11929:9;:7;:9::i;:::-;-1:-1:-1;;;;;11915:23:37;:10;-1:-1:-1;;;;;11915:23:37;;11907:32;;;;;;11950:19;11972:7;:5;:7::i;:::-;11950:29;-1:-1:-1;12008:21:37;11998:6;:31;;;;;;;;:::i;:::-;;;:67;;;;-1:-1:-1;12043:22:37;12033:6;:32;;;;;;;;:::i;:::-;;;11998:67;11990:108;;;;-1:-1:-1;;;11990:108:37;;24132:2:47;11990:108:37;;;24114:21:47;24171:2;24151:18;;;24144:30;24210;24190:18;;;24183:58;24258:18;;11990:108:37;23930:352:47;11990:108:37;12108:9;:16;;-1:-1:-1;;12108:16:37;12120:4;12108:16;;;12140:17;;;;12108:9;;12140:17;11897:267;11864:300::o;2267:252:43:-;2358:35;;2318:7;;2358:35;;2337:139;;;;-1:-1:-1;;;2337:139:43;;;;;;;:::i;:::-;-1:-1:-1;2493:19:43;;;2267:252::o;5378:112:37:-;5436:16;5471:12;5464:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5378:112;:::o;11020:753::-;11122:9;:7;:9::i;:::-;-1:-1:-1;;;;;11108:23:37;:10;-1:-1:-1;;;;;11108:23:37;;11100:91;;;;-1:-1:-1;;;11100:91:37;;24489:2:47;11100:91:37;;;24471:21:47;24528:2;24508:18;;;24501:30;24567:34;24547:18;;;24540:62;24638:25;24618:18;;;24611:53;24681:19;;11100:91:37;24287:419:47;11100:91:37;11233:22;11222:7;:5;:7::i;:::-;:33;;;;;;;;:::i;:::-;;11201:153;;;;-1:-1:-1;;;11201:153:37;;24913:2:47;11201:153:37;;;24895:21:47;24952:2;24932:18;;;24925:30;24991:34;24971:18;;;24964:62;25062:34;25042:18;;;25035:62;-1:-1:-1;;;25113:19:47;;;25106:40;25163:19;;11201:153:37;24711:477:47;11201:153:37;11370:13;11365:357;11397:11;:18;11389:5;:26;11365:357;;;11444:19;:39;11464:11;11476:5;11464:18;;;;;;;;:::i;:::-;;;;;;;11444:39;;;;;;;;;;;;11487:1;11444:44;11440:272;;11550:1;11508:19;:39;11528:11;11540:5;11528:18;;;;;;;;:::i;:::-;;;;;;;11508:39;;;;;;;;;;;:43;;;;11569:128;;;;;;;;;;;;;;;;;:10;:30;11580:11;11592:5;11580:18;;;;;;;;:::i;:::-;;;;;;;11569:30;;;;;;;;;;;:42;;:128;;;;;;:::i;:::-;;11440:272;11417:7;;;;:::i;:::-;;;;11365:357;;;;11737:29;11754:11;11737:29;;;;;;:::i;:::-;;;;;;;;11020:753;:::o;781:356:41:-;900:9;:7;:9::i;:::-;-1:-1:-1;;;;;886:23:41;:10;-1:-1:-1;;;;;886:23:41;;878:32;;;;;;920:38;961:23;630:22;;-1:-1:-1;;;;;630:22:41;;536:123;961:23;994:22;:47;;-1:-1:-1;;;;;;994:47:41;-1:-1:-1;;;;;994:47:41;;;;;;;;;1056:74;;;27689:15:47;;;27671:34;;27736:2;27721:18;;27714:43;;;;920:64:41;;-1:-1:-1;1056:74:41;;27606:18:47;1056:74:41;;;;;;;868:269;781:356;:::o;1754:143:36:-;1840:7;1866:24;2862:17:42;;;2770:116;2457:341:23;2553:11;2602:2;2586:5;2580:19;:24;2576:216;;;2627:20;2641:5;2627:13;:20::i;:::-;2620:27;;;;2576:216;2704:5;2678:46;2719:5;2704;2678:46;:::i;:::-;-1:-1:-1;933:66:23;;2457:341;-1:-1:-1;;;2457:341:23:o;3310:202:24:-;3486:10;3310:202::o;1156:154:29:-;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:29:o;13908:722:37:-;14069:7;14111:19;14100:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;14092:78;;;;-1:-1:-1;;;14092:78:37;;27970:2:47;14092:78:37;;;27952:21:47;28009:2;27989:18;;;27982:30;28048:34;28028:18;;;28021:62;-1:-1:-1;;;28099:18:47;;;28092:33;28142:19;;14092:78:37;27768:399:47;14092:78:37;14199:1;14188:8;:12;14180:68;;;;-1:-1:-1;;;14180:68:37;;28374:2:47;14180:68:37;;;28356:21:47;28413:2;28393:18;;;28386:30;28452:34;28432:18;;;28425:62;-1:-1:-1;;;28503:18:47;;;28496:41;28554:19;;14180:68:37;28172:407:47;14180:68:37;-1:-1:-1;;;;;14280:34:37;;;;;;:25;:34;;;;;;;;14259:160;;;;-1:-1:-1;;;14259:160:37;;28786:2:47;14259:160:37;;;28768:21:47;28825:2;28805:18;;;28798:30;28864:34;28844:18;;;28837:62;28935:34;28915:18;;;28908:62;-1:-1:-1;;;28986:19:47;;;28979:46;29042:19;;14259:160:37;28584:483:47;14259:160:37;14429:78;14440:10;14452:7;14461;14470:8;14480:17;:26;14498:7;-1:-1:-1;;;;;14480:26:37;-1:-1:-1;;;;;14480:26:37;;;;;;;;;;;;;14429:10;:78::i;:::-;14532:7;-1:-1:-1;;;;;14523:56:37;;14541:10;14553:7;14562:8;14572:6;14523:56;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;14597:26:37;;;;;:17;:26;;;;;;;13908:722;-1:-1:-1;13908:722:37:o;4261:717:43:-;4404:4;4439:3;;4452:171;4478:16;:23;4474:1;:27;4452:171;;;4548:16;4565:4;4548:22;;;;;;;;:::i;:::-;;;;;;;4526:16;4543:1;4526:19;;;;;;;;:::i;:::-;;;;;;;:44;4522:91;;;4597:1;4590:8;;4522:91;4503:3;;;;:::i;:::-;;;;4452:171;;;;4644:3;4636:4;:11;4632:29;;4656:5;4649:12;;;;;4632:29;4671:15;4689:16;4706:3;4689:21;;;;;;;;:::i;:::-;;;;;;;4671:39;;4744:16;4761:4;4744:22;;;;;;;;:::i;:::-;;;;;;;4720:16;4737:3;4720:21;;;;;;;;:::i;:::-;;;;;;:46;;;;;4801:8;4776:16;4793:4;4776:22;;;;;;;;:::i;:::-;;;;;;:33;;;;;4819:22;4844:11;4856:3;4844:16;;;;;;;;:::i;:::-;;;;;;;4819:41;;4889:11;4901:4;4889:17;;;;;;;;:::i;:::-;;;;;;;4870:11;4882:3;4870:16;;;;;;;;:::i;:::-;;;;;;:36;;;;;4936:14;4916:11;4928:4;4916:17;;;;;;;;:::i;:::-;;;;;;;;;;:34;-1:-1:-1;4967:4:43;;4261:717;-1:-1:-1;;;;;;4261:717:43:o;10011:899:37:-;10090:7;10128:19;10117:7;:5;:7::i;:::-;:30;;;;;;;;:::i;:::-;;10109:105;;;;-1:-1:-1;;;10109:105:37;;29721:2:47;10109:105:37;;;29703:21:47;29760:2;29740:18;;;29733:30;29799:34;29779:18;;;29772:62;29870:32;29850:18;;;29843:60;29920:19;;10109:105:37;29519:426:47;10109:105:37;10275:31;:29;:31::i;:::-;10261:10;10245:27;;;;:15;:27;;;;;;:61;10224:201;;;;-1:-1:-1;;;10224:201:37;;30152:2:47;10224:201:37;;;30134:21:47;30191:2;30171:18;;;30164:30;30230:34;30210:18;;;30203:62;30301:34;30281:18;;;30274:62;30373:31;30352:19;;;30345:60;30422:19;;10224:201:37;29950:497:47;10224:201:37;10465:18;:16;:18::i;:::-;10443:12;:19;:40;10435:110;;;;-1:-1:-1;;;10435:110:37;;30654:2:47;10435:110:37;;;30636:21:47;30693:2;30673:18;;;30666:30;30732:34;30712:18;;;30705:62;30803:27;30783:18;;;30776:55;30848:19;;10435:110:37;30452:421:47;10435:110:37;10556:18;10577:22;10590:8;10577:12;:22::i;:::-;10618;;;;:10;:22;;;;;:29;;;10556:43;;-1:-1:-1;10618:29:37;;10617:30;10609:84;;;;-1:-1:-1;;;10609:84:37;;31080:2:47;10609:84:37;;;31062:21:47;31119:2;31099:18;;;31092:30;31158:34;31138:18;;;31131:62;-1:-1:-1;;;31209:18:47;;;31202:39;31258:19;;10609:84:37;30878:405:47;10609:84:37;10704:12;:29;;;;;;;;;;;;;;-1:-1:-1;10743:22:37;;;:10;10704:29;10743:22;;;;;;;:33;;;;-1:-1:-1;;;;;;10743:33:37;-1:-1:-1;;;;;10743:33:37;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10743:33:37;;;;;;;;;-1:-1:-1;;10743:33:37;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10743:33:37;-1:-1:-1;;;;;10743:33:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10743:33:37;;;;;;;;;;10802:10;10786:27;;;;:15;:27;;;;;;:32;;10743:33;;-1:-1:-1;10786:27:37;-1:-1:-1;10786:32:37;;10743:33;;10786:32;:::i;:::-;;;;-1:-1:-1;;10834:41:37;;;31462:25:47;;;719:10:22;31518:2:47;31503:18;;31496:60;10834:41:37;;;;;;;;;;;;;10893:10;10011:899;-1:-1:-1;;10011:899:37:o;2929:268:23:-;3023:13;933:66;3052:47;;3048:143;;3122:15;3131:5;3122:8;:15::i;3048:143::-;3175:5;3168:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:286;1316:11;1339:17;1365:3;1339:30;;1397:2;1383:4;:11;:16;1379:72;;;1436:3;1422:18;;-1:-1:-1;;;1422:18:23;;;;;;;;:::i;1379:72::-;1517:11;;1500:13;1517:4;1500:13;:::i;:::-;1492:36;;1251:286;-1:-1:-1;;;1251:286:23:o;1934:290:29:-;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:29;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:29;1934:290;-1:-1:-1;;;1934:290:29:o;2785:1272:40:-;2959:33;2995:32;;;:20;:32;;;;;;;;-1:-1:-1;;;;;3085:35:40;;;;:26;:35;;;;;;;3072:48;;:10;:48;:::i;:::-;3059:8;:62;;3038:160;;;;-1:-1:-1;;;3038:160:40;;32071:2:47;3038:160:40;;;32053:21:47;32110:2;32090:18;;;32083:30;32149:34;32129:18;;;32122:62;-1:-1:-1;;;32200:18:47;;;32193:49;32259:19;;3038:160:40;31869:415:47;3038:160:40;-1:-1:-1;;;;;3232:39:40;;3209:20;3232:39;;;:30;;;:39;;;;;:48;:53;3300:30;;;3296:601;;3346:52;;3390:8;;3346:12;;:31;;:52;;3390:8;;3346:52;:::i;:::-;;;;-1:-1:-1;;;;;;;3412:39:40;;;;;;:30;;;:39;;;;;:60;;3464:8;;3412:39;:60;;3464:8;;3412:60;:::i;:::-;;;;-1:-1:-1;3296:601:40;;-1:-1:-1;3296:601:40;;-1:-1:-1;;3493:34:40;;;;3489:408;;3551:19;:17;:19::i;:::-;3574:1;3551:24;3543:101;;;;;-1:-1:-1;;;3543:101:40;;32491:2:47;3543:101:40;;;32473:21:47;32510:18;;;32503:30;;;;32569:34;32549:18;;;32542:62;32640:34;32620:18;;;32613:62;32692:19;;3543:101:40;32289:428:47;3543:101:40;3706:8;3658:12;:31;;:44;;;:56;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;3728:39:40;;;;;;:30;;;:39;;;;;:52;;:64;;3784:8;;3728:39;:64;;3784:8;;3728:64;:::i;3489:408::-;3823:63;;-1:-1:-1;;;3823:63:40;;32924:2:47;3823:63:40;;;32906:21:47;32963:2;32943:18;;;32936:30;33002:34;32982:18;;;32975:62;-1:-1:-1;;;33053:18:47;;;33046:51;33114:19;;3823:63:40;32722:417:47;3489:408:40;3911:15;3907:87;;;3942:27;;;:41;;;;;;;-1:-1:-1;3942:41:40;;;;;;;;;;-1:-1:-1;;;;;;3942:41:40;-1:-1:-1;;;;;3942:41:40;;;;;3907:87;-1:-1:-1;;;;;4003:35:40;;;;;;:26;:35;;;;;:47;;4042:8;;4003:35;:47;;4042:8;;4003:47;:::i;:::-;;;;-1:-1:-1;;;;;;;;;2785:1272:40:o;1621:405:23:-;1680:13;1705:11;1719:16;1730:4;1719:10;:16::i;:::-;1843:14;;;1854:2;1843:14;;;;;;;;;1705:30;;-1:-1:-1;1823:17:23;;1843:14;;;;;;;;;-1:-1:-1;;;1933:16:23;;;-1:-1:-1;1978:4:23;1969:14;;1962:28;;;;-1:-1:-1;1933:16:23;1621:405::o;8975:147:29:-;9038:7;9068:1;9064;:5;:51;;9196:13;9287:15;;;9322:4;9315:15;;;9368:4;9352:21;;9064:51;;;-1:-1:-1;9196:13:29;9287:15;;;9322:4;9315:15;9368:4;9352:21;;;8975:147::o;2098:245:23:-;2159:7;2231:4;2195:40;;2258:2;2249:11;;2245:69;;;2283:20;;-1:-1:-1;;;2283:20:23;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:286:47;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;349:23;;-1:-1:-1;;;;;;401:32:47;;391:43;;381:71;;448:1;445;438:12;887:423;929:3;967:5;961:12;994:6;989:3;982:19;1019:1;1029:162;1043:6;1040:1;1037:13;1029:162;;;1105:4;1161:13;;;1157:22;;1151:29;1133:11;;;1129:20;;1122:59;1058:12;1029:162;;;1033:3;1236:1;1229:4;1220:6;1215:3;1211:16;1207:27;1200:38;1299:4;1292:2;1288:7;1283:2;1275:6;1271:15;1267:29;1262:3;1258:39;1254:50;1247:57;;;887:423;;;;:::o;1315:220::-;1464:2;1453:9;1446:21;1427:4;1484:45;1525:2;1514:9;1510:18;1502:6;1484:45;:::i;1540:180::-;1599:6;1652:2;1640:9;1631:7;1627:23;1623:32;1620:52;;;1668:1;1665;1658:12;1620:52;-1:-1:-1;1691:23:47;;1540:180;-1:-1:-1;1540:180:47:o;1881:257::-;1801:12;;1789:25;;1863:4;1852:16;;;1846:23;1830:14;;;1823:47;2073:2;2058:18;;2085:47;1725:151;2143:131;-1:-1:-1;;;;;2218:31:47;;2208:42;;2198:70;;2264:1;2261;2254:12;2198:70;2143:131;:::o;2279:367::-;2342:8;2352:6;2406:3;2399:4;2391:6;2387:17;2383:27;2373:55;;2424:1;2421;2414:12;2373:55;-1:-1:-1;2447:20:47;;-1:-1:-1;;;;;2479:30:47;;2476:50;;;2522:1;2519;2512:12;2476:50;2559:4;2551:6;2547:17;2535:29;;2619:3;2612:4;2602:6;2599:1;2595:14;2587:6;2583:27;2579:38;2576:47;2573:67;;;2636:1;2633;2626:12;2651:160;2716:20;;2772:13;;2765:21;2755:32;;2745:60;;2801:1;2798;2791:12;2745:60;2651:160;;;:::o;2816:709::-;2926:6;2934;2942;2950;2958;3011:3;2999:9;2990:7;2986:23;2982:33;2979:53;;;3028:1;3025;3018:12;2979:53;3067:9;3054:23;3086:31;3111:5;3086:31;:::i;:::-;3136:5;-1:-1:-1;3188:2:47;3173:18;;3160:32;;-1:-1:-1;3243:2:47;3228:18;;3215:32;-1:-1:-1;;;;;3259:30:47;;3256:50;;;3302:1;3299;3292:12;3256:50;3341:70;3403:7;3394:6;3383:9;3379:22;3341:70;:::i;:::-;3430:8;;-1:-1:-1;3315:96:47;-1:-1:-1;3484:35:47;;-1:-1:-1;3515:2:47;3500:18;;3484:35;:::i;:::-;3474:45;;2816:709;;;;;;;;:::o;3735:156::-;3801:20;;3861:4;3850:16;;3840:27;;3830:55;;3881:1;3878;3871:12;3896:713;4016:6;4024;4032;4040;4048;4056;4109:3;4097:9;4088:7;4084:23;4080:33;4077:53;;;4126:1;4123;4116:12;4077:53;4162:9;4149:23;4139:33;;4191:36;4223:2;4212:9;4208:18;4191:36;:::i;:::-;4181:46;;4274:2;4263:9;4259:18;4246:32;4236:42;;4325:2;4314:9;4310:18;4297:32;4287:42;;4380:3;4369:9;4365:19;4352:33;-1:-1:-1;;;;;4400:6:47;4397:30;4394:50;;;4440:1;4437;4430:12;4394:50;4479:70;4541:7;4532:6;4521:9;4517:22;4479:70;:::i;:::-;3896:713;;;;-1:-1:-1;3896:713:47;;-1:-1:-1;3896:713:47;;4568:8;;3896:713;-1:-1:-1;;;3896:713:47:o;4614:180::-;4670:6;4723:2;4711:9;4702:7;4698:23;4694:32;4691:52;;;4739:1;4736;4729:12;4691:52;4762:26;4778:9;4762:26;:::i;4799:435::-;4852:3;4890:5;4884:12;4917:6;4912:3;4905:19;4943:4;4972:2;4967:3;4963:12;4956:19;;5009:2;5002:5;4998:14;5030:1;5040:169;5054:6;5051:1;5048:13;5040:169;;;5115:13;;5103:26;;5149:12;;;;5184:15;;;;5076:1;5069:9;5040:169;;;-1:-1:-1;5225:3:47;;4799:435;-1:-1:-1;;;;;4799:435:47:o;5239:261::-;5418:2;5407:9;5400:21;5381:4;5438:56;5490:2;5479:9;5475:18;5467:6;5438:56;:::i;5505:127::-;5566:10;5561:3;5557:20;5554:1;5547:31;5597:4;5594:1;5587:15;5621:4;5618:1;5611:15;5637:257;5709:4;5703:11;;;5741:17;;-1:-1:-1;;;;;5773:34:47;;5809:22;;;5770:62;5767:88;;;5835:18;;:::i;:::-;5871:4;5864:24;5637:257;:::o;5899:253::-;5971:2;5965:9;6013:4;6001:17;;-1:-1:-1;;;;;6033:34:47;;6069:22;;;6030:62;6027:88;;;6095:18;;:::i;6157:275::-;6228:2;6222:9;6293:2;6274:13;;-1:-1:-1;;6270:27:47;6258:40;;-1:-1:-1;;;;;6313:34:47;;6349:22;;;6310:62;6307:88;;;6375:18;;:::i;:::-;6411:2;6404:22;6157:275;;-1:-1:-1;6157:275:47:o;6437:486::-;6498:5;6546:4;6534:9;6529:3;6525:19;6521:30;6518:50;;;6564:1;6561;6554:12;6518:50;6597:2;6591:9;6639:4;6631:6;6627:17;6710:6;6698:10;6695:22;-1:-1:-1;;;;;6662:10:47;6659:34;6656:62;6653:88;;;6721:18;;:::i;:::-;6757:2;6750:22;6790:6;-1:-1:-1;6790:6:47;6820:23;;6852:33;6820:23;6852:33;:::i;:::-;6894:23;;6437:486;;-1:-1:-1;;6437:486:47:o;6928:183::-;6988:4;-1:-1:-1;;;;;7013:6:47;7010:30;7007:56;;;7043:18;;:::i;:::-;-1:-1:-1;7088:1:47;7084:14;7100:4;7080:25;;6928:183::o;7116:1048::-;7175:5;7223:4;7211:9;7206:3;7202:19;7198:30;7195:50;;;7241:1;7238;7231:12;7195:50;7263:22;;:::i;:::-;7254:31;;7321:9;7308:23;-1:-1:-1;;;;;7346:6:47;7343:30;7340:50;;;7386:1;7383;7376:12;7340:50;7409:22;;7462:4;7454:13;;7450:23;-1:-1:-1;7440:51:47;;7487:1;7484;7477:12;7440:51;7523:2;7510:16;7545:4;7569:60;7585:43;7625:2;7585:43;:::i;:::-;7569:60;:::i;:::-;7663:15;;;7745:1;7741:10;;;;7733:19;;7729:28;;;7694:12;;;;7769:15;;;7766:35;;;7797:1;7794;7787:12;7766:35;7821:11;;;;7841:223;7857:6;7852:3;7849:15;7841:223;;;7939:3;7926:17;7956:33;7981:7;7956:33;:::i;:::-;8002:20;;7874:12;;;;8042;;;;7841:223;;;8073:20;;-1:-1:-1;8138:18:47;;;8125:32;8109:14;;;8102:56;;;;-1:-1:-1;8080:5:47;7116:1048;-1:-1:-1;;7116:1048:47:o;8169:1282::-;8228:5;8276:4;8264:9;8259:3;8255:19;8251:30;8248:50;;;8294:1;8291;8284:12;8248:50;8316:22;;:::i;:::-;8307:31;;8375:9;8362:23;8394:33;8419:7;8394:33;:::i;:::-;8436:22;;8477:2;8515:18;;;8502:32;-1:-1:-1;;;;;8583:14:47;;;8580:34;;;8610:1;8607;8600:12;8580:34;8648:6;8637:9;8633:22;8623:32;;8693:3;8686:4;8682:2;8678:13;8674:23;8664:51;;8711:1;8708;8701:12;8664:51;8747:2;8734:16;8769:2;8765;8762:10;8759:36;;;8775:18;;:::i;:::-;8817:53;8860:2;8841:13;;-1:-1:-1;;8837:27:47;8833:36;;8817:53;:::i;:::-;8893:2;8886:5;8879:17;8933:3;8928:2;8923;8919;8915:11;8911:20;8908:29;8905:49;;;8950:1;8947;8940:12;8905:49;9005:2;9000;8996;8992:11;8987:2;8980:5;8976:14;8963:45;9049:1;9044:2;9039;9032:5;9028:14;9024:23;9017:34;9083:5;9078:2;9071:5;9067:14;9060:29;;;9121:35;9152:2;9141:9;9137:18;9121:35;:::i;:::-;9116:2;9109:5;9105:14;9098:59;9189:57;9242:3;9237:2;9226:9;9222:18;9189:57;:::i;:::-;9184:2;9177:5;9173:14;9166:81;9300:3;9289:9;9285:19;9272:33;9256:49;;9330:2;9320:8;9317:16;9314:36;;;9346:1;9343;9336:12;9314:36;;;9383:61;9440:3;9429:8;9418:9;9414:24;9383:61;:::i;:::-;9377:3;9370:5;9366:15;9359:86;;8169:1282;;;;:::o;9456:356::-;9546:6;9599:2;9587:9;9578:7;9574:23;9570:32;9567:52;;;9615:1;9612;9605:12;9567:52;9655:9;9642:23;-1:-1:-1;;;;;9680:6:47;9677:30;9674:50;;;9720:1;9717;9710:12;9674:50;9743:63;9798:7;9789:6;9778:9;9774:22;9743:63;:::i;10006:905::-;10284:4;10313:2;10342;10331:9;10324:21;10368:56;10420:2;10409:9;10405:18;10397:6;10368:56;:::i;:::-;10481:22;;;10443:2;10461:18;;;10454:50;;;;10553:13;;10575:22;;;10651:15;;;;10613;;;10684:1;10694:191;10708:6;10705:1;10702:13;10694:191;;;10757:48;10801:3;10792:6;10786:13;1801:12;;1789:25;;1863:4;1852:16;;;1846:23;1830:14;;1823:47;1725:151;10757:48;10860:15;;;;10825:12;;;;10730:1;10723:9;10694:191;;;-1:-1:-1;10902:3:47;;10006:905;-1:-1:-1;;;;;;;;10006:905:47:o;11169:247::-;11228:6;11281:2;11269:9;11260:7;11256:23;11252:32;11249:52;;;11297:1;11294;11287:12;11249:52;11336:9;11323:23;11355:31;11380:5;11355:31;:::i;11421:318::-;11496:6;11504;11512;11565:2;11553:9;11544:7;11540:23;11536:32;11533:52;;;11581:1;11578;11571:12;11533:52;11617:9;11604:23;11594:33;;11646:36;11678:2;11667:9;11663:18;11646:36;:::i;:::-;11636:46;;11729:2;11718:9;11714:18;11701:32;11691:42;;11421:318;;;;;:::o;11744:315::-;11812:6;11820;11873:2;11861:9;11852:7;11848:23;11844:32;11841:52;;;11889:1;11886;11879:12;11841:52;11925:9;11912:23;11902:33;;11985:2;11974:9;11970:18;11957:32;11998:31;12023:5;11998:31;:::i;:::-;12048:5;12038:15;;;11744:315;;;;;:::o;12303:640::-;12407:6;12415;12423;12431;12484:2;12472:9;12463:7;12459:23;12455:32;12452:52;;;12500:1;12497;12490:12;12452:52;12539:9;12526:23;12558:31;12583:5;12558:31;:::i;:::-;12608:5;-1:-1:-1;12660:2:47;12645:18;;12632:32;;-1:-1:-1;12715:2:47;12700:18;;12687:32;-1:-1:-1;;;;;12731:30:47;;12728:50;;;12774:1;12771;12764:12;12728:50;12813:70;12875:7;12866:6;12855:9;12851:22;12813:70;:::i;:::-;12303:640;;;;-1:-1:-1;12902:8:47;-1:-1:-1;;;;12303:640:47:o;12948:920::-;13354:3;13349;13345:13;13337:6;13333:26;13322:9;13315:45;13396:3;13391:2;13380:9;13376:18;13369:31;13296:4;13423:46;13464:3;13453:9;13449:19;13441:6;13423:46;:::i;:::-;13517:9;13509:6;13505:22;13500:2;13489:9;13485:18;13478:50;13551:33;13577:6;13569;13551:33;:::i;:::-;13615:2;13600:18;;13593:34;;;-1:-1:-1;;;;;13664:32:47;;13658:3;13643:19;;13636:61;13684:3;13713:19;;13706:35;;;13778:22;;;13772:3;13757:19;;13750:51;13537:47;-1:-1:-1;13818:44:47;13537:47;13847:6;13818:44;:::i;:::-;13810:52;12948:920;-1:-1:-1;;;;;;;;;;12948:920:47:o;13873:572::-;13968:6;13976;13984;14037:2;14025:9;14016:7;14012:23;14008:32;14005:52;;;14053:1;14050;14043:12;14005:52;14092:9;14079:23;14111:31;14136:5;14111:31;:::i;:::-;14161:5;-1:-1:-1;14217:2:47;14202:18;;14189:32;-1:-1:-1;;;;;14233:30:47;;14230:50;;;14276:1;14273;14266:12;14230:50;14315:70;14377:7;14368:6;14357:9;14353:22;14315:70;:::i;:::-;13873:572;;14404:8;;-1:-1:-1;14289:96:47;;-1:-1:-1;;;;13873:572:47:o;14450:461::-;14503:3;14541:5;14535:12;14568:6;14563:3;14556:19;14594:4;14623:2;14618:3;14614:12;14607:19;;14660:2;14653:5;14649:14;14681:1;14691:195;14705:6;14702:1;14699:13;14691:195;;;14770:13;;-1:-1:-1;;;;;14766:39:47;14754:52;;14826:12;;;;14861:15;;;;14802:1;14720:9;14691:195;;14916:261;15095:2;15084:9;15077:21;15058:4;15115:56;15167:2;15156:9;15152:18;15144:6;15115:56;:::i;15364:692::-;15490:6;15498;15506;15559:2;15547:9;15538:7;15534:23;15530:32;15527:52;;;15575:1;15572;15565:12;15527:52;15615:9;15602:23;-1:-1:-1;;;;;15685:2:47;15677:6;15674:14;15671:34;;;15701:1;15698;15691:12;15671:34;15724:63;15779:7;15770:6;15759:9;15755:22;15724:63;:::i;:::-;15714:73;;15840:2;15829:9;15825:18;15812:32;15796:48;;15869:2;15859:8;15856:16;15853:36;;;15885:1;15882;15875:12;15853:36;;15924:72;15988:7;15977:8;15966:9;15962:24;15924:72;:::i;16061:127::-;16122:10;16117:3;16113:20;16110:1;16103:31;16153:4;16150:1;16143:15;16177:4;16174:1;16167:15;16193:346;16343:2;16328:18;;16376:1;16365:13;;16355:144;;16421:10;16416:3;16412:20;16409:1;16402:31;16456:4;16453:1;16446:15;16484:4;16481:1;16474:15;16355:144;16508:25;;;16193:346;:::o;16544:994::-;16735:2;16724:9;16717:21;16698:4;16774:1;16770;16765:3;16761:11;16757:19;16831:2;16822:6;16816:13;16812:22;16807:2;16796:9;16792:18;16785:50;16882:2;16874:6;16870:15;16864:22;16922:4;16917:2;16906:9;16902:18;16895:32;16950:52;16997:3;16986:9;16982:19;16968:12;16950:52;:::i;:::-;16936:66;;17070:2;17062:6;17058:15;17052:22;17045:30;17038:38;17033:2;17022:9;17018:18;17011:66;17149:2;17142;17134:6;17130:15;17124:22;17118:29;17114:38;17108:3;17097:9;17093:19;17086:67;17202:3;17194:6;17190:16;17184:23;17162:45;;17277:2;17273:7;17261:9;17253:6;17249:22;17245:36;17238:4;17227:9;17223:20;17216:66;17319:14;17313:21;17358:2;17350:6;17343:18;17384:61;17441:2;17433:6;17429:15;17413:14;17384:61;:::i;:::-;17504:2;17484:23;;;17478:30;17461:15;;;;17454:55;;;;-1:-1:-1;17370:75:47;16544:994;-1:-1:-1;;;16544:994:47:o;17543:891::-;17627:6;17658:2;17701;17689:9;17680:7;17676:23;17672:32;17669:52;;;17717:1;17714;17707:12;17669:52;17757:9;17744:23;-1:-1:-1;;;;;17782:6:47;17779:30;17776:50;;;17822:1;17819;17812:12;17776:50;17845:22;;17898:4;17890:13;;17886:27;-1:-1:-1;17876:55:47;;17927:1;17924;17917:12;17876:55;17963:2;17950:16;17986:60;18002:43;18042:2;18002:43;:::i;17986:60::-;18080:15;;;18162:1;18158:10;;;;18150:19;;18146:28;;;18111:12;;;;18186:19;;;18183:39;;;18218:1;18215;18208:12;18183:39;18242:11;;;;18262:142;18278:6;18273:3;18270:15;18262:142;;;18344:17;;18332:30;;18295:12;;;;18382;;;;18262:142;;;18423:5;17543:891;-1:-1:-1;;;;;;;17543:891:47:o;18714:380::-;18793:1;18789:12;;;;18836;;;18857:61;;18911:4;18903:6;18899:17;18889:27;;18857:61;18964:2;18956:6;18953:14;18933:18;18930:38;18927:161;;19010:10;19005:3;19001:20;18998:1;18991:31;19045:4;19042:1;19035:15;19073:4;19070:1;19063:15;18927:161;;18714:380;;;:::o;19099:473::-;19301:2;19283:21;;;19340:2;19320:18;;;19313:30;19379:34;19374:2;19359:18;;19352:62;19450:34;19445:2;19430:18;;19423:62;-1:-1:-1;;;19516:3:47;19501:19;;19494:36;19562:3;19547:19;;19099:473::o;19577:127::-;19638:10;19633:3;19629:20;19626:1;19619:31;19669:4;19666:1;19659:15;19693:4;19690:1;19683:15;19709:125;19774:9;;;19795:10;;;19792:36;;;19808:18;;:::i;20138:127::-;20199:10;20194:3;20190:20;20187:1;20180:31;20230:4;20227:1;20220:15;20254:4;20251:1;20244:15;20270:200;20336:9;;;20309:4;20364:9;;20392:10;;20404:12;;;20388:29;20427:12;;;20419:21;;20385:56;20382:82;;;20444:18;;:::i;:::-;20382:82;20270:200;;;;:::o;20475:135::-;20514:3;20535:17;;;20532:43;;20555:18;;:::i;:::-;-1:-1:-1;20602:1:47;20591:13;;20475:135::o;20615:128::-;20682:9;;;20703:11;;;20700:37;;;20717:18;;:::i;20748:411::-;20950:2;20932:21;;;20989:2;20969:18;;;20962:30;21028:34;21023:2;21008:18;;21001:62;-1:-1:-1;;;21094:2:47;21079:18;;21072:45;21149:3;21134:19;;20748:411::o;25319:545::-;25421:2;25416:3;25413:11;25410:448;;;25457:1;25482:5;25478:2;25471:17;25527:4;25523:2;25513:19;25597:2;25585:10;25581:19;25578:1;25574:27;25568:4;25564:38;25633:4;25621:10;25618:20;25615:47;;;-1:-1:-1;25656:4:47;25615:47;25711:2;25706:3;25702:12;25699:1;25695:20;25689:4;25685:31;25675:41;;25766:82;25784:2;25777:5;25774:13;25766:82;;;25829:17;;;25810:1;25799:13;25766:82;;;25770:3;;;25410:448;25319:545;;;:::o;26040:1352::-;26166:3;26160:10;-1:-1:-1;;;;;26185:6:47;26182:30;26179:56;;;26215:18;;:::i;:::-;26244:97;26334:6;26294:38;26326:4;26320:11;26294:38;:::i;:::-;26288:4;26244:97;:::i;:::-;26396:4;;26460:2;26449:14;;26477:1;26472:663;;;;27179:1;27196:6;27193:89;;;-1:-1:-1;27248:19:47;;;27242:26;27193:89;-1:-1:-1;;25997:1:47;25993:11;;;25989:24;25985:29;25975:40;26021:1;26017:11;;;25972:57;27295:81;;26442:944;;26472:663;25266:1;25259:14;;;25303:4;25290:18;;-1:-1:-1;;26508:20:47;;;26626:236;26640:7;26637:1;26634:14;26626:236;;;26729:19;;;26723:26;26708:42;;26821:27;;;;26789:1;26777:14;;;;26656:19;;26626:236;;;26630:3;26890:6;26881:7;26878:19;26875:201;;;26951:19;;;26945:26;-1:-1:-1;;27034:1:47;27030:14;;;27046:3;27026:24;27022:37;27018:42;27003:58;26988:74;;26875:201;-1:-1:-1;;;;;27122:1:47;27106:14;;;27102:22;27089:36;;-1:-1:-1;26040:1352:47:o;29072:442::-;29301:6;29290:9;29283:25;29356:4;29348:6;29344:17;29339:2;29328:9;29324:18;29317:45;29398:6;29393:2;29382:9;29378:18;29371:34;29441:3;29436:2;29425:9;29421:18;29414:31;29264:4;29462:46;29503:3;29492:9;29488:19;29480:6;29462:46;:::i;:::-;29454:54;29072:442;-1:-1:-1;;;;;;29072:442:47:o;31567:297::-;31685:12;;31732:4;31721:16;;;31715:23;;31685:12;31750:16;;31747:111;;;-1:-1:-1;;31824:4:47;31820:17;;;;31817:1;31813:25;31809:38;31798:50;;31567:297;-1:-1:-1;31567:297:47:o",
    "linkReferences": {},
    "immutableReferences": {
      "30999": [
        {
          "start": 5362,
          "length": 32
        }
      ],
      "31002": [
        {
          "start": 5404,
          "length": 32
        }
      ],
      "35325": [
        {
          "start": 2339,
          "length": 32
        },
        {
          "start": 3515,
          "length": 32
        }
      ],
      "35327": [
        {
          "start": 2699,
          "length": 32
        },
        {
          "start": 3616,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "AMOUNT_FOR_SUMBITTER_PROOF()": "347cf665",
    "BALLOT_TYPEHASH()": "deaaa7cc",
    "COUNTING_MODE()": "dd4e2ba5",
    "METADATAS_COUNT()": "4d24a67f",
    "addressSubmitterVerified(address)": "cb853950",
    "addressTotalCastVoteCounts(address)": "a1ac6cb2",
    "addressTotalVotes(address)": "dea5f6a6",
    "addressTotalVotesVerified(address)": "930de979",
    "allProposalTotalVotes()": "50a5e524",
    "allProposalTotalVotesWithoutDeleted()": "d45a010b",
    "cancel()": "ea8a1af0",
    "castVote(uint256,uint8,uint256,uint256,bytes32[])": "419c533c",
    "castVoteWithoutProof(uint256,uint8,uint256)": "65f16263",
    "checkProof(address,uint256,bytes32[],bool)": "32763c22",
    "contestAddressTotalVotesCast(address)": "aec116b6",
    "contestDeadline()": "262e59e9",
    "contestStart()": "004114a8",
    "creator()": "02d05d3f",
    "deleteProposals(uint256[])": "f0a7db0a",
    "downvotingAllowed()": "60506ff6",
    "eip712Domain()": "84b0196e",
    "getAllProposalIds()": "efa90d36",
    "getNumSubmissions(address)": "5f953a03",
    "getProposal(uint256)": "c7f758a8",
    "hashProposal((address,string,bool,(address),(address[],uint256)))": "cf6afbae",
    "highestTiedRanking()": "ebc18b9b",
    "isProposalDeleted(uint256)": "3b6d199b",
    "isTied(uint256)": "2399c660",
    "lowestRanking()": "6ca1a2c7",
    "maxProposalCount()": "fb9bf8d4",
    "name()": "06fdde03",
    "numAllowedProposalSubmissions()": "832009af",
    "officialRewardsModule()": "785ddfe5",
    "prompt()": "7c65d711",
    "proposalAddressVotes(uint256,address)": "6e4eb810",
    "proposalAddressesHaveVoted(uint256)": "b323580d",
    "proposalVotes(uint256)": "544ffc9c",
    "proposalVotesStructs(uint256)": "070dc5d9",
    "propose((address,string,bool,(address),(address[],uint256)),bytes32[])": "bfe45b59",
    "proposeWithoutProof((address,string,bool,(address),(address[],uint256)))": "4970ab2f",
    "rankingPosition(uint256)": "86187488",
    "setOfficialRewardsModule(address)": "f4f3d7ec",
    "setSortedAndTiedProposals()": "96f0e962",
    "setSortedAndTiedProposalsHasBeenRun()": "d8891619",
    "sortedProposalIds()": "8a9cd550",
    "sortedProposals(bool)": "427d56c2",
    "state()": "c19d93fb",
    "submissionMerkleRoot()": "bddc1641",
    "supportsInterface(bytes4)": "01ffc9a7",
    "tiedAdjustedRankingPosition(uint256)": "e5eb5a48",
    "validateProposalData((address,string,bool,(address),(address[],uint256)))": "7f57a0ba",
    "verifySubmitter(address,bytes32[])": "8d50dc6b",
    "verifyTotalVotes(address,uint256,bytes32[])": "7d8bfc44",
    "version()": "54fd4d50",
    "voteStart()": "e031535b",
    "votingDelay()": "3932abb1",
    "votingMerkleRoot()": "dd96a19d",
    "votingPeriod()": "02a251a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_prompt\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_submissionMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_votingMerkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"_constructorIntParams\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInMerkle\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ContestCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldContestStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newContestStart\",\"type\":\"uint256\"}],\"name\":\"ContestStartSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldCreator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCreator\",\"type\":\"address\"}],\"name\":\"CreatorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldDownvotingAllowed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDownvotingAllowed\",\"type\":\"uint256\"}],\"name\":\"DownvotingAllowedSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxProposalCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxProposalCount\",\"type\":\"uint256\"}],\"name\":\"MaxProposalCountSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldNumAllowedProposalSubmissions\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newNumAllowedProposalSubmissions\",\"type\":\"uint256\"}],\"name\":\"NumAllowedProposalSubmissionsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"oldOfficialRewardsModule\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract RewardsModule\",\"name\":\"newOfficialRewardsModule\",\"type\":\"address\"}],\"name\":\"OfficialRewardsModuleSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"ProposalsDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMOUNT_FOR_SUMBITTER_PROOF\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COUNTING_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATAS_COUNT\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressSubmitterVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalCastVoteCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressTotalVotesVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalTotalVotesWithoutDeleted\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIdsReturn\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts[]\",\"name\":\"proposalVoteCountsArrayReturn\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"castVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"numVotes\",\"type\":\"uint256\"}],\"name\":\"castVoteWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressToCheck\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool\",\"name\":\"voting\",\"type\":\"bool\"}],\"name\":\"checkProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"contestAddressTotalVotesCast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVotesCast\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestDeadline\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contestStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"proposalIds\",\"type\":\"uint256[]\"}],\"name\":\"deleteProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"downvotingAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNumSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"hashProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestTiedRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"isProposalDeleted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"name\":\"isTied\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lowestRanking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAllowedProposalSubmissions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"officialRewardsModule\",\"outputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"proposalAddressVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalAddressesHaveVoted\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"proposalVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalVotesStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorCountingSimple.VoteCounts\",\"name\":\"proposalVoteCounts\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"proposeWithoutProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ranking\",\"type\":\"uint256\"}],\"name\":\"rankingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract RewardsModule\",\"name\":\"officialRewardsModule_\",\"type\":\"address\"}],\"name\":\"setOfficialRewardsModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSortedAndTiedProposals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSortedAndTiedProposalsHasBeenRun\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sortedProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"excludeDeletedProposals\",\"type\":\"bool\"}],\"name\":\"sortedProposals\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"sortedProposalIdsReturn\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum IGovernor.ContestState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submissionMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tiedAdjustedRankingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"internalType\":\"struct IGovernor.TargetMetadata\",\"name\":\"targetMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"internalType\":\"struct IGovernor.SafeMetadata\",\"name\":\"safeMetadata\",\"type\":\"tuple\"}],\"internalType\":\"struct IGovernor.ProposalCore\",\"name\":\"proposal\",\"type\":\"tuple\"}],\"name\":\"validateProposalData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"dataValidated\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifySubmitter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyTotalVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"ContestCanceled()\":{\"details\":\"Emitted when a contest is canceled.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ProposalCreated(uint256,address)\":{\"details\":\"Emitted when a proposal is created.\"},\"ProposalsDeleted(uint256[])\":{\"details\":\"Emitted when proposals are deleted.\"},\"VoteCast(address,uint256,uint8,uint256,string)\":{\"details\":\"Emitted when a vote is cast. Note: `support` values should be seen as buckets. There interpretation depends on the voting module used.\"}},\"kind\":\"dev\",\"methods\":{\"COUNTING_MODE()\":{\"details\":\"See {IGovernor-COUNTING_MODE}.\"},\"allProposalTotalVotes()\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"allProposalTotalVotesWithoutDeleted()\":{\"details\":\"Accessor to the internal vote counts for a given proposal that excludes deleted proposals.\"},\"cancel()\":{\"details\":\"Emits a {IGovernor-ContestCanceled} event.\"},\"castVote(uint256,uint8,uint256,uint256,bytes32[])\":{\"details\":\"See {IGovernor-castVote}.\"},\"castVoteWithoutProof(uint256,uint8,uint256)\":{\"details\":\"See {IGovernor-castVoteWithoutProof}.\"},\"checkProof(address,uint256,bytes32[],bool)\":{\"params\":{\"addressToCheck\":\"address of claimee\",\"amount\":\"to check that the claimee has\",\"proof\":\"merkle proof to prove address and amount are in tree\"}},\"contestAddressTotalVotesCast(address)\":{\"details\":\"Accessor to how many votes an address has cast total for the contest so far.\"},\"contestDeadline()\":{\"details\":\"See {IGovernor-contestDeadline}.\"},\"deleteProposals(uint256[])\":{\"details\":\"Delete proposals. Emits a {IGovernor-ProposalsDeleted} event.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}.\"},\"getAllProposalIds()\":{\"details\":\"Return all proposals.\"},\"getNumSubmissions(address)\":{\"details\":\"Get the number of proposal submissions for a given address.\"},\"getProposal(uint256)\":{\"details\":\"Retrieve proposal data\\\"_.\"},\"hashProposal((address,string,bool,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts.\"},\"highestTiedRanking()\":{\"details\":\"Getter for highest tied ranking.\"},\"isProposalDeleted(uint256)\":{\"details\":\"Returns if a proposal has been deleted or not (0 if not, 1 if it has been deleted).\"},\"isTied(uint256)\":{\"details\":\"Getter if a given ranking is tied.\"},\"lowestRanking()\":{\"details\":\"Getter for the lowest ranking.\"},\"name()\":{\"details\":\"See {IGovernor-name}.\"},\"officialRewardsModule()\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"prompt()\":{\"details\":\"See {IGovernor-prompt}.\"},\"proposalAddressVotes(uint256,address)\":{\"details\":\"Accessor to how many votes an address has cast for a given proposal.\"},\"proposalAddressesHaveVoted(uint256)\":{\"details\":\"Accessor to which addresses have cast a vote for a given proposal.\"},\"proposalVotes(uint256)\":{\"details\":\"Accessor to the internal vote counts for a given proposal.\"},\"propose((address,string,bool,(address),(address[],uint256)),bytes32[])\":{\"details\":\"See {IGovernor-propose}.\"},\"proposeWithoutProof((address,string,bool,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-proposeWithoutProof}.\"},\"rankingPosition(uint256)\":{\"details\":\"Getter for tiedAdjustedRankingPosition of a ranking.\"},\"setOfficialRewardsModule(address)\":{\"details\":\"Get the official rewards module contract for this contest (effectively reverse record).\"},\"setSortedAndTiedProposals()\":{\"details\":\"Setter for _sortedProposalIds, tiedAdjustedRankingPosition, _isTied, _lowestRanking, and _highestTiedRanking. Will only be called once and only needs to be called once because once the contest is complete these values don't change. Determines if a ranking is tied and also where the last iteration of a ranking is in the _sortedProposalIds list taking ties into account.\"},\"sortedProposalIds()\":{\"details\":\"Getter for _sortedProposalIds.\"},\"sortedProposals(bool)\":{\"details\":\"Accessor to sorted list of proposalIds in ascending order.\"},\"state()\":{\"details\":\"See {IGovernor-state}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"validateProposalData((address,string,bool,(address),(address[],uint256)))\":{\"details\":\"See {IGovernor-validateProposalData}.\"},\"verifySubmitter(address,bytes32[])\":{\"details\":\"See {IGovernor-verifySubmitter}.\"},\"verifyTotalVotes(address,uint256,bytes32[])\":{\"details\":\"See {IGovernor-verifyTotalVotes}.\"},\"version()\":{\"details\":\"See {IGovernor-version}.\"},\"voteStart()\":{\"details\":\"See {IGovernor-voteStart}.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"NotInMerkle()\":[{\"notice\":\"Thrown if address/amount are not part of Merkle tree\"}]},\"kind\":\"user\",\"methods\":{\"checkProof(address,uint256,bytes32[],bool)\":{\"notice\":\"Allows checking of proofs for an address\"},\"submissionMerkleRoot()\":{\"notice\":\"ERC20-claimee inclusion root\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Contest.sol\":\"Contest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x6df04f39889de6f277a0e3f2c307f3f0a2dba677d1ed877d50fb39c1184992b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://03af6d201c35597a22b7bd24e84b2fffd5821de653d139484d6bf8ea3c86d2ae\",\"dweb:/ipfs/QmV4RfQVsJd86aCRevLmMdbxGrU5QgbffTif1zRTGUR68D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xf415bea43be5587b449753cfddab434182034ded22e50bc9dce4ac4a613045ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7a59358eef93ae8635d00b89285adc2295870f12f720e5b54800d54568b1\",\"dweb:/ipfs/QmTSKWkpvFdHkT9NrLPmS1SVeSgvV6hbS5xb91giLoEr32\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b\",\"dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/Timers.sol\":{\"keccak256\":\"0x3ee0d9289f88556bc231aa720fcf43a31bda1ee164ada26c2048165df71bdaac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8eb8853c016aa7cc6719eccc73df5b3cfc24e62e868e161968cc87e358bcac2\",\"dweb:/ipfs/QmPUDxGwtCJ13ZjDa5bzeCn6iXj4iXvgZg73D8SoKz8nhY\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbb3a7044647cb4088be40b49b87ff990fac44f2d50569110a2b2ce7942365020\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5deecb9394b327096dee59f6d2600e5dc41795d20d6312b9e17184d04941855e\",\"dweb:/ipfs/QmNRLLFHxfdzPBcUF2NpyGqBoYzGGoR34g7HWFzEcPokEX\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xa8f005abb8835d40af525bcf3cdc31d7e4a55730ce9b584d3fe4e5db442fb0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a1184f05c5a953155e11cb977e5c08a3b4442919c7e928d3e3adbf06ae6fff\",\"dweb:/ipfs/QmdRf7Cg7e9va2K29Kb7KLng26GmUmpti7mAEhGbAQXS7r\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcc76dbe53154a5bbd12fdd1613a73f73f3dc7c63d813be36f7ee606f52d6a7b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://345232794f2cfafccfb4371e44910af9fd86f972ecace1bb6843532536590929\",\"dweb:/ipfs/QmSnapDBk6P2JG6LJHwituQq7wMM8DawKj32APiPj5Bzpn\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3\",\"dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/Contest.sol\":{\"keccak256\":\"0xa471cab034594f2c2abee2478c60c024de57070152038716d4deaf704f79143c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19bde157cbcdaa4bc4a6e28390bc2f06a558abcf594d70038e0e4f7cab6ba363\",\"dweb:/ipfs/QmW8Hi3fPYwekpdzPuiYATh5NrHz9RkDSr1LjvTPXnG46V\"]},\"src/governance/Governor.sol\":{\"keccak256\":\"0xbe47a86b89fbe1ae3e4fefb15707c9ea6c1a7f2b103cb6cc84c7788a3fa88f01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8db126a5866d1a840f25868b781cc501ce7a192b1e2985f7bda538976ea4133f\",\"dweb:/ipfs/QmZAZeXfrKszvv8p6tVxTJDje8UD8sWsQf63T4RBmiKbU1\"]},\"src/governance/GovernorMerkleVotes.sol\":{\"keccak256\":\"0xdf37902c07f4229349c80ae7335d7d7112265e62428a38e2786584382bc8f0ec\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://73866fb05fb57229990cbb10d7788098ad66e0a821bb8622d91eb0e9cb836d5d\",\"dweb:/ipfs/Qmeg5mnXTsXYyrkGhMYfX1XjBAT6Y2wwwrcQZxKVkKHRgU\"]},\"src/governance/IGovernor.sol\":{\"keccak256\":\"0xad4fd6736428a1d85b7ffea3171f48917fec4c1ad1bce9e32d5e26da7f639c32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d470926e2c0fd971afecef670084de6e7f6eb7ecedf28e7ca833a0e97a31c18\",\"dweb:/ipfs/QmXLVWjBS9fU1Pmmytgo9DNmSjcMQc79vCNxzRCr7xncbi\"]},\"src/governance/extensions/GovernorCountingSimple.sol\":{\"keccak256\":\"0x86c4edaf6832e124bbad89f527c5970ee0ad54d047bbd4cf5da14ca27bb08988\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34bb63b96fb431abcf2015b400cec15ee0704ea4d471a62c9303c23c42cce1c3\",\"dweb:/ipfs/QmTHzoiysENmAF85UwP9swko8R6x8Wm8gF4FfxCXanTwea\"]},\"src/governance/extensions/GovernorModuleRegistry.sol\":{\"keccak256\":\"0x62c9d2a2dcaeccf1b6b801595f34abf893416964997e6ba699c9828ada1abefc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18672ac920d4749fec025a7c8610c8cb866addb0ba20e9cfce5bedd91e062776\",\"dweb:/ipfs/QmNPWkqouY45jCeeFYi5metLX9d8BpSuGXLG55A5BZjH4D\"]},\"src/governance/extensions/GovernorSettings.sol\":{\"keccak256\":\"0xc0c49d1f98f73d4bb5ae3b30d9224f97342d172c9137430808a081ffa9d28d52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd981f3202d803806adefbb6b21625f2320e6fbaaaf2ae690434fa198a76ad30\",\"dweb:/ipfs/Qmcrw93uTQSVUpXm1YJjTRMjMXFMjZrhMYCFXKHkGcGbGi\"]},\"src/governance/extensions/GovernorSorting.sol\":{\"keccak256\":\"0xc0924ea85c65ad7ae2257e168d258c78dfc3f7e085f9b9b730717733c6ede09f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90291f04dfd83f11f5354398f0754f68c7d4acba3c1609546494276945efbfc1\",\"dweb:/ipfs/QmUnVAGZeEZX78ZWpT5UYTAZpbyHYz3nKAxVM9Cn371k7d\"]},\"src/modules/RewardsModule.sol\":{\"keccak256\":\"0x7a766078ce8c7a97df13178abe204409194b61481094a24ac744525b72c022f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b6d62b4b43d011b0e99d3857dc8148747715d068f1349669b4f917b3a59c189\",\"dweb:/ipfs/QmSLPmrqoCuaqGmWHsEZWEmvWjCheXPiHCGZijgUCq3Tjw\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_prompt",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_submissionMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "_votingMerkleRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "_constructorIntParams",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotInMerkle"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "ContestCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldContestStart",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newContestStart",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContestStartSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldCreator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newCreator",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CreatorSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldDownvotingAllowed",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newDownvotingAllowed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DownvotingAllowedSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldMaxProposalCount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newMaxProposalCount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MaxProposalCountSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldNumAllowedProposalSubmissions",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newNumAllowedProposalSubmissions",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NumAllowedProposalSubmissionsSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "oldOfficialRewardsModule",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract RewardsModule",
              "name": "newOfficialRewardsModule",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfficialRewardsModuleSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ProposalsDeleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "voter",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoteCast",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingDelay",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingDelay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "oldVotingPeriod",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newVotingPeriod",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VotingPeriodSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AMOUNT_FOR_SUMBITTER_PROOF",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BALLOT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "COUNTING_MODE",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "METADATAS_COUNT",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressSubmitterVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalCastVoteCounts",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "addressTotalVotesVerified",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotes",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allProposalTotalVotesWithoutDeleted",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIdsReturn",
              "type": "uint256[]"
            },
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts[]",
              "name": "proposalVoteCountsArrayReturn",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVote",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "numVotes",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castVoteWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addressToCheck",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bool",
              "name": "voting",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contestAddressTotalVotesCast",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "totalVotesCast",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestDeadline",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contestStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "proposalIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteProposals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "downvotingAllowed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProposal",
          "outputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashProposal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "highestTiedRanking",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProposalDeleted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ranking",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTied",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lowestRanking",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxProposalCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numAllowedProposalSubmissions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "officialRewardsModule",
          "outputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "prompt",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalAddressesHaveVoted",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "proposalId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotes",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "forVotes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "againstVotes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "proposalVotesStructs",
          "outputs": [
            {
              "internalType": "struct GovernorCountingSimple.VoteCounts",
              "name": "proposalVoteCounts",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "forVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "againstVotes",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "propose",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proposeWithoutProof",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "ranking",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rankingPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract RewardsModule",
              "name": "officialRewardsModule_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOfficialRewardsModule"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSortedAndTiedProposals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "setSortedAndTiedProposalsHasBeenRun",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedProposalIds",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "excludeDeletedProposals",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sortedProposals",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "sortedProposalIdsReturn",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "state",
          "outputs": [
            {
              "internalType": "enum IGovernor.ContestState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "submissionMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tiedAdjustedRankingPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IGovernor.ProposalCore",
              "name": "proposal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "exists",
                  "type": "bool"
                },
                {
                  "internalType": "struct IGovernor.TargetMetadata",
                  "name": "targetMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "targetAddress",
                      "type": "address"
                    }
                  ]
                },
                {
                  "internalType": "struct IGovernor.SafeMetadata",
                  "name": "safeMetadata",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "signers",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "threshold",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "validateProposalData",
          "outputs": [
            {
              "internalType": "bool",
              "name": "dataValidated",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifySubmitter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalVotes",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyTotalVotes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "verified",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "voteStart",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "votingPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "COUNTING_MODE()": {
            "details": "See {IGovernor-COUNTING_MODE}."
          },
          "allProposalTotalVotes()": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "allProposalTotalVotesWithoutDeleted()": {
            "details": "Accessor to the internal vote counts for a given proposal that excludes deleted proposals."
          },
          "cancel()": {
            "details": "Emits a {IGovernor-ContestCanceled} event."
          },
          "castVote(uint256,uint8,uint256,uint256,bytes32[])": {
            "details": "See {IGovernor-castVote}."
          },
          "castVoteWithoutProof(uint256,uint8,uint256)": {
            "details": "See {IGovernor-castVoteWithoutProof}."
          },
          "checkProof(address,uint256,bytes32[],bool)": {
            "params": {
              "addressToCheck": "address of claimee",
              "amount": "to check that the claimee has",
              "proof": "merkle proof to prove address and amount are in tree"
            }
          },
          "contestAddressTotalVotesCast(address)": {
            "details": "Accessor to how many votes an address has cast total for the contest so far."
          },
          "contestDeadline()": {
            "details": "See {IGovernor-contestDeadline}."
          },
          "deleteProposals(uint256[])": {
            "details": "Delete proposals. Emits a {IGovernor-ProposalsDeleted} event."
          },
          "eip712Domain()": {
            "details": "See {EIP-5267}."
          },
          "getAllProposalIds()": {
            "details": "Return all proposals."
          },
          "getNumSubmissions(address)": {
            "details": "Get the number of proposal submissions for a given address."
          },
          "getProposal(uint256)": {
            "details": "Retrieve proposal data\"_."
          },
          "hashProposal((address,string,bool,(address),(address[],uint256)))": {
            "details": "See {IGovernor-hashProposal}. The proposal id is produced by hashing the RLC encoded `targets` array, the `values` array, the `calldatas` array and the descriptionHash (bytes32 which itself is the keccak256 hash of the description string). This proposal id can be produced from the proposal data which is part of the {ProposalCreated} event. It can even be computed in advance, before the proposal is submitted. Note that the chainId and the governor address are not part of the proposal id computation. Consequently, the same proposal (with same operation and same description) will have the same id if submitted on multiple governors accross multiple networks. This also means that in order to execute the same operation twice (on the same governor) the proposer will have to change the description in order to avoid proposal id conflicts."
          },
          "highestTiedRanking()": {
            "details": "Getter for highest tied ranking."
          },
          "isProposalDeleted(uint256)": {
            "details": "Returns if a proposal has been deleted or not (0 if not, 1 if it has been deleted)."
          },
          "isTied(uint256)": {
            "details": "Getter if a given ranking is tied."
          },
          "lowestRanking()": {
            "details": "Getter for the lowest ranking."
          },
          "name()": {
            "details": "See {IGovernor-name}."
          },
          "officialRewardsModule()": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "prompt()": {
            "details": "See {IGovernor-prompt}."
          },
          "proposalAddressVotes(uint256,address)": {
            "details": "Accessor to how many votes an address has cast for a given proposal."
          },
          "proposalAddressesHaveVoted(uint256)": {
            "details": "Accessor to which addresses have cast a vote for a given proposal."
          },
          "proposalVotes(uint256)": {
            "details": "Accessor to the internal vote counts for a given proposal."
          },
          "propose((address,string,bool,(address),(address[],uint256)),bytes32[])": {
            "details": "See {IGovernor-propose}."
          },
          "proposeWithoutProof((address,string,bool,(address),(address[],uint256)))": {
            "details": "See {IGovernor-proposeWithoutProof}."
          },
          "rankingPosition(uint256)": {
            "details": "Getter for tiedAdjustedRankingPosition of a ranking."
          },
          "setOfficialRewardsModule(address)": {
            "details": "Get the official rewards module contract for this contest (effectively reverse record)."
          },
          "setSortedAndTiedProposals()": {
            "details": "Setter for _sortedProposalIds, tiedAdjustedRankingPosition, _isTied, _lowestRanking, and _highestTiedRanking. Will only be called once and only needs to be called once because once the contest is complete these values don't change. Determines if a ranking is tied and also where the last iteration of a ranking is in the _sortedProposalIds list taking ties into account."
          },
          "sortedProposalIds()": {
            "details": "Getter for _sortedProposalIds."
          },
          "sortedProposals(bool)": {
            "details": "Accessor to sorted list of proposalIds in ascending order."
          },
          "state()": {
            "details": "See {IGovernor-state}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "validateProposalData((address,string,bool,(address),(address[],uint256)))": {
            "details": "See {IGovernor-validateProposalData}."
          },
          "verifySubmitter(address,bytes32[])": {
            "details": "See {IGovernor-verifySubmitter}."
          },
          "verifyTotalVotes(address,uint256,bytes32[])": {
            "details": "See {IGovernor-verifyTotalVotes}."
          },
          "version()": {
            "details": "See {IGovernor-version}."
          },
          "voteStart()": {
            "details": "See {IGovernor-voteStart}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkProof(address,uint256,bytes32[],bool)": {
            "notice": "Allows checking of proofs for an address"
          },
          "submissionMerkleRoot()": {
            "notice": "ERC20-claimee inclusion root"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@forge-std/=lib/forge-std/src/",
        ":@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Contest.sol": "Contest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0x6df04f39889de6f277a0e3f2c307f3f0a2dba677d1ed877d50fb39c1184992b8",
        "urls": [
          "bzz-raw://03af6d201c35597a22b7bd24e84b2fffd5821de653d139484d6bf8ea3c86d2ae",
          "dweb:/ipfs/QmV4RfQVsJd86aCRevLmMdbxGrU5QgbffTif1zRTGUR68D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xf415bea43be5587b449753cfddab434182034ded22e50bc9dce4ac4a613045ee",
        "urls": [
          "bzz-raw://9baf7a59358eef93ae8635d00b89285adc2295870f12f720e5b54800d54568b1",
          "dweb:/ipfs/QmTSKWkpvFdHkT9NrLPmS1SVeSgvV6hbS5xb91giLoEr32"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae",
        "urls": [
          "bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b",
          "dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Timers.sol": {
        "keccak256": "0x3ee0d9289f88556bc231aa720fcf43a31bda1ee164ada26c2048165df71bdaac",
        "urls": [
          "bzz-raw://a8eb8853c016aa7cc6719eccc73df5b3cfc24e62e868e161968cc87e358bcac2",
          "dweb:/ipfs/QmPUDxGwtCJ13ZjDa5bzeCn6iXj4iXvgZg73D8SoKz8nhY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xbb3a7044647cb4088be40b49b87ff990fac44f2d50569110a2b2ce7942365020",
        "urls": [
          "bzz-raw://5deecb9394b327096dee59f6d2600e5dc41795d20d6312b9e17184d04941855e",
          "dweb:/ipfs/QmNRLLFHxfdzPBcUF2NpyGqBoYzGGoR34g7HWFzEcPokEX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0xa8f005abb8835d40af525bcf3cdc31d7e4a55730ce9b584d3fe4e5db442fb0ed",
        "urls": [
          "bzz-raw://a0a1184f05c5a953155e11cb977e5c08a3b4442919c7e928d3e3adbf06ae6fff",
          "dweb:/ipfs/QmdRf7Cg7e9va2K29Kb7KLng26GmUmpti7mAEhGbAQXS7r"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcc76dbe53154a5bbd12fdd1613a73f73f3dc7c63d813be36f7ee606f52d6a7b3",
        "urls": [
          "bzz-raw://345232794f2cfafccfb4371e44910af9fd86f972ecace1bb6843532536590929",
          "dweb:/ipfs/QmSnapDBk6P2JG6LJHwituQq7wMM8DawKj32APiPj5Bzpn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0xea30c402170bc240354b74e6c6f6a8e5bdb1935d90d168cc58c0654461c6a72b",
        "urls": [
          "bzz-raw://95cbddf89006e6dbbc200eb091eb90025c97a9980310f2325c9bda2c4fdc97e3",
          "dweb:/ipfs/QmT67Dt3xrKEQSDC4XyDcrKwZUYsJzddrRFjEopRZNP9yR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/Contest.sol": {
        "keccak256": "0xa471cab034594f2c2abee2478c60c024de57070152038716d4deaf704f79143c",
        "urls": [
          "bzz-raw://19bde157cbcdaa4bc4a6e28390bc2f06a558abcf594d70038e0e4f7cab6ba363",
          "dweb:/ipfs/QmW8Hi3fPYwekpdzPuiYATh5NrHz9RkDSr1LjvTPXnG46V"
        ],
        "license": "MIT"
      },
      "src/governance/Governor.sol": {
        "keccak256": "0xbe47a86b89fbe1ae3e4fefb15707c9ea6c1a7f2b103cb6cc84c7788a3fa88f01",
        "urls": [
          "bzz-raw://8db126a5866d1a840f25868b781cc501ce7a192b1e2985f7bda538976ea4133f",
          "dweb:/ipfs/QmZAZeXfrKszvv8p6tVxTJDje8UD8sWsQf63T4RBmiKbU1"
        ],
        "license": "MIT"
      },
      "src/governance/GovernorMerkleVotes.sol": {
        "keccak256": "0xdf37902c07f4229349c80ae7335d7d7112265e62428a38e2786584382bc8f0ec",
        "urls": [
          "bzz-raw://73866fb05fb57229990cbb10d7788098ad66e0a821bb8622d91eb0e9cb836d5d",
          "dweb:/ipfs/Qmeg5mnXTsXYyrkGhMYfX1XjBAT6Y2wwwrcQZxKVkKHRgU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/governance/IGovernor.sol": {
        "keccak256": "0xad4fd6736428a1d85b7ffea3171f48917fec4c1ad1bce9e32d5e26da7f639c32",
        "urls": [
          "bzz-raw://4d470926e2c0fd971afecef670084de6e7f6eb7ecedf28e7ca833a0e97a31c18",
          "dweb:/ipfs/QmXLVWjBS9fU1Pmmytgo9DNmSjcMQc79vCNxzRCr7xncbi"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorCountingSimple.sol": {
        "keccak256": "0x86c4edaf6832e124bbad89f527c5970ee0ad54d047bbd4cf5da14ca27bb08988",
        "urls": [
          "bzz-raw://34bb63b96fb431abcf2015b400cec15ee0704ea4d471a62c9303c23c42cce1c3",
          "dweb:/ipfs/QmTHzoiysENmAF85UwP9swko8R6x8Wm8gF4FfxCXanTwea"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorModuleRegistry.sol": {
        "keccak256": "0x62c9d2a2dcaeccf1b6b801595f34abf893416964997e6ba699c9828ada1abefc",
        "urls": [
          "bzz-raw://18672ac920d4749fec025a7c8610c8cb866addb0ba20e9cfce5bedd91e062776",
          "dweb:/ipfs/QmNPWkqouY45jCeeFYi5metLX9d8BpSuGXLG55A5BZjH4D"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorSettings.sol": {
        "keccak256": "0xc0c49d1f98f73d4bb5ae3b30d9224f97342d172c9137430808a081ffa9d28d52",
        "urls": [
          "bzz-raw://cd981f3202d803806adefbb6b21625f2320e6fbaaaf2ae690434fa198a76ad30",
          "dweb:/ipfs/Qmcrw93uTQSVUpXm1YJjTRMjMXFMjZrhMYCFXKHkGcGbGi"
        ],
        "license": "MIT"
      },
      "src/governance/extensions/GovernorSorting.sol": {
        "keccak256": "0xc0924ea85c65ad7ae2257e168d258c78dfc3f7e085f9b9b730717733c6ede09f",
        "urls": [
          "bzz-raw://90291f04dfd83f11f5354398f0754f68c7d4acba3c1609546494276945efbfc1",
          "dweb:/ipfs/QmUnVAGZeEZX78ZWpT5UYTAZpbyHYz3nKAxVM9Cn371k7d"
        ],
        "license": "MIT"
      },
      "src/modules/RewardsModule.sol": {
        "keccak256": "0x7a766078ce8c7a97df13178abe204409194b61481094a24ac744525b72c022f2",
        "urls": [
          "bzz-raw://7b6d62b4b43d011b0e99d3857dc8148747715d068f1349669b4f917b3a59c189",
          "dweb:/ipfs/QmSLPmrqoCuaqGmWHsEZWEmvWjCheXPiHCGZijgUCq3Tjw"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Contest.sol",
    "id": 34384,
    "exportedSymbols": {
      "Address": [
        29818
      ],
      "Contest": [
        34383
      ],
      "Context": [
        29840
      ],
      "ECDSA": [
        30975
      ],
      "EIP712": [
        31179
      ],
      "ERC165": [
        31712
      ],
      "Governor": [
        35317
      ],
      "GovernorCountingSimple": [
        35894
      ],
      "GovernorMerkleVotes": [
        35399
      ],
      "GovernorModuleRegistry": [
        35954
      ],
      "GovernorSettings": [
        36253
      ],
      "GovernorSorting": [
        36896
      ],
      "IERC165": [
        31724
      ],
      "IERC20": [
        29076
      ],
      "IERC20Permit": [
        29112
      ],
      "IERC5267": [
        28998
      ],
      "IGovernor": [
        35628
      ],
      "Math": [
        32590
      ],
      "MerkleProof": [
        31685
      ],
      "RewardsModule": [
        37709
      ],
      "SafeCast": [
        34131
      ],
      "SafeERC20": [
        29488
      ],
      "ShortString": [
        29845
      ],
      "ShortStrings": [
        30056
      ],
      "SignedMath": [
        34236
      ],
      "StorageSlot": [
        30166
      ],
      "Strings": [
        30395
      ],
      "Timers": [
        30609
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2151:36",
    "nodes": [
      {
        "id": 34238,
        "nodeType": "PragmaDirective",
        "src": "32:23:36",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 34239,
        "nodeType": "ImportDirective",
        "src": "57:35:36",
        "nodes": [],
        "absolutePath": "src/governance/Governor.sol",
        "file": "./governance/Governor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 35318,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34240,
        "nodeType": "ImportDirective",
        "src": "93:54:36",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorSettings.sol",
        "file": "./governance/extensions/GovernorSettings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 36254,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34241,
        "nodeType": "ImportDirective",
        "src": "148:60:36",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorCountingSimple.sol",
        "file": "./governance/extensions/GovernorCountingSimple.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 35895,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34242,
        "nodeType": "ImportDirective",
        "src": "209:60:36",
        "nodes": [],
        "absolutePath": "src/governance/extensions/GovernorModuleRegistry.sol",
        "file": "./governance/extensions/GovernorModuleRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34384,
        "sourceUnit": 35955,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34383,
        "nodeType": "ContractDefinition",
        "src": "271:1911:36",
        "nodes": [
          {
            "id": 34291,
            "nodeType": "FunctionDefinition",
            "src": "365:716:36",
            "nodes": [],
            "body": {
              "id": 34290,
              "nodeType": "Block",
              "src": "1079:2:36",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 34264,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34252,
                    "src": "582:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 34265,
                    "name": "_prompt",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34254,
                    "src": "589:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 34266,
                    "name": "_submissionMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34256,
                    "src": "598:21:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 34267,
                    "name": "_votingMerkleRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34258,
                    "src": "621:17:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 34268,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34263,
                  "name": "Governor",
                  "nameLocations": [
                    "573:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35317,
                  "src": "573:8:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "573:66:36"
              },
              {
                "arguments": [
                  {
                    "baseExpression": {
                      "id": 34270,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "678:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34272,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 34271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "700:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "678:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34273,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "740:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34275,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 34274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "762:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "740:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34276,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "802:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34278,
                    "indexExpression": {
                      "hexValue": "32",
                      "id": 34277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "824:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "802:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34279,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "865:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34281,
                    "indexExpression": {
                      "hexValue": "33",
                      "id": 34280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "887:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "865:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34282,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "945:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34284,
                    "indexExpression": {
                      "hexValue": "34",
                      "id": 34283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "967:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "945:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "baseExpression": {
                      "id": 34285,
                      "name": "_constructorIntParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34261,
                      "src": "1011:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 34287,
                    "indexExpression": {
                      "hexValue": "35",
                      "id": 34286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1011:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 34288,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34269,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "648:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36253,
                  "src": "648:16:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "648:426:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34252,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "400:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "386:19:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34251,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34254,
                  "mutability": "mutable",
                  "name": "_prompt",
                  "nameLocation": "429:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "415:21:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34253,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34256,
                  "mutability": "mutable",
                  "name": "_submissionMerkleRoot",
                  "nameLocation": "454:21:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "446:29:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34255,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34258,
                  "mutability": "mutable",
                  "name": "_votingMerkleRoot",
                  "nameLocation": "493:17:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "485:25:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34257,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34261,
                  "mutability": "mutable",
                  "name": "_constructorIntParams",
                  "nameLocation": "537:21:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 34291,
                  "src": "520:38:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34259,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "520:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34260,
                    "nodeType": "ArrayTypeName",
                    "src": "520:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "376:188:36"
            },
            "returnParameters": {
              "id": 34289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1079:0:36"
            },
            "scope": 34383,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34304,
            "nodeType": "FunctionDefinition",
            "src": "1155:136:36",
            "nodes": [],
            "body": {
              "id": 34303,
              "nodeType": "Block",
              "src": "1247:44:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34299,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1264:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1270:12:36",
                      "memberName": "contestStart",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36073,
                      "src": "1264:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1264:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34298,
                  "id": 34302,
                  "nodeType": "Return",
                  "src": "1257:27:36"
                }
              ]
            },
            "baseFunctions": [
              35514,
              36073
            ],
            "functionSelector": "004114a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contestStart",
            "nameLocation": "1164:12:36",
            "overrides": {
              "id": 34295,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34293,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1200:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35628,
                  "src": "1200:9:36"
                },
                {
                  "id": 34294,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1211:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36253,
                  "src": "1211:16:36"
                }
              ],
              "src": "1191:37:36"
            },
            "parameters": {
              "id": 34292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1176:2:36"
            },
            "returnParameters": {
              "id": 34298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34297,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34304,
                  "src": "1238:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1237:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34317,
            "nodeType": "FunctionDefinition",
            "src": "1297:134:36",
            "nodes": [],
            "body": {
              "id": 34316,
              "nodeType": "Block",
              "src": "1388:43:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34312,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1405:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1411:11:36",
                      "memberName": "votingDelay",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36083,
                      "src": "1405:17:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:19:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34311,
                  "id": 34315,
                  "nodeType": "Return",
                  "src": "1398:26:36"
                }
              ]
            },
            "baseFunctions": [
              35532,
              36083
            ],
            "functionSelector": "3932abb1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingDelay",
            "nameLocation": "1306:11:36",
            "overrides": {
              "id": 34308,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34306,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1341:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35628,
                  "src": "1341:9:36"
                },
                {
                  "id": 34307,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1352:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36253,
                  "src": "1352:16:36"
                }
              ],
              "src": "1332:37:36"
            },
            "parameters": {
              "id": 34305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:2:36"
            },
            "returnParameters": {
              "id": 34311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34310,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34317,
                  "src": "1379:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1378:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34330,
            "nodeType": "FunctionDefinition",
            "src": "1437:136:36",
            "nodes": [],
            "body": {
              "id": 34329,
              "nodeType": "Block",
              "src": "1529:44:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34325,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1546:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1552:12:36",
                      "memberName": "votingPeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36093,
                      "src": "1546:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34324,
                  "id": 34328,
                  "nodeType": "Return",
                  "src": "1539:27:36"
                }
              ]
            },
            "baseFunctions": [
              35538,
              36093
            ],
            "functionSelector": "02a251a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingPeriod",
            "nameLocation": "1446:12:36",
            "overrides": {
              "id": 34321,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34319,
                  "name": "IGovernor",
                  "nameLocations": [
                    "1482:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35628,
                  "src": "1482:9:36"
                },
                {
                  "id": 34320,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1493:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36253,
                  "src": "1493:16:36"
                }
              ],
              "src": "1473:37:36"
            },
            "parameters": {
              "id": 34318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1458:2:36"
            },
            "returnParameters": {
              "id": 34324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34330,
                  "src": "1520:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34343,
            "nodeType": "FunctionDefinition",
            "src": "1579:169:36",
            "nodes": [],
            "body": {
              "id": 34342,
              "nodeType": "Block",
              "src": "1687:61:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34338,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1704:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1710:29:36",
                      "memberName": "numAllowedProposalSubmissions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36103,
                      "src": "1704:35:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:37:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34337,
                  "id": 34341,
                  "nodeType": "Return",
                  "src": "1697:44:36"
                }
              ]
            },
            "baseFunctions": [
              34690,
              36103
            ],
            "functionSelector": "832009af",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numAllowedProposalSubmissions",
            "nameLocation": "1588:29:36",
            "overrides": {
              "id": 34334,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34332,
                  "name": "Governor",
                  "nameLocations": [
                    "1641:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35317,
                  "src": "1641:8:36"
                },
                {
                  "id": 34333,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1651:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36253,
                  "src": "1651:16:36"
                }
              ],
              "src": "1632:36:36"
            },
            "parameters": {
              "id": 34331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1617:2:36"
            },
            "returnParameters": {
              "id": 34337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34336,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34343,
                  "src": "1678:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34356,
            "nodeType": "FunctionDefinition",
            "src": "1754:143:36",
            "nodes": [],
            "body": {
              "id": 34355,
              "nodeType": "Block",
              "src": "1849:48:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34351,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1866:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1872:16:36",
                      "memberName": "maxProposalCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36113,
                      "src": "1866:22:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:24:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34350,
                  "id": 34354,
                  "nodeType": "Return",
                  "src": "1859:31:36"
                }
              ]
            },
            "baseFunctions": [
              34699,
              36113
            ],
            "functionSelector": "fb9bf8d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "maxProposalCount",
            "nameLocation": "1763:16:36",
            "overrides": {
              "id": 34347,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34345,
                  "name": "Governor",
                  "nameLocations": [
                    "1803:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35317,
                  "src": "1803:8:36"
                },
                {
                  "id": 34346,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1813:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36253,
                  "src": "1813:16:36"
                }
              ],
              "src": "1794:36:36"
            },
            "parameters": {
              "id": 34344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:2:36"
            },
            "returnParameters": {
              "id": 34350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34356,
                  "src": "1840:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34369,
            "nodeType": "FunctionDefinition",
            "src": "1903:145:36",
            "nodes": [],
            "body": {
              "id": 34368,
              "nodeType": "Block",
              "src": "1999:49:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34364,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2016:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2022:17:36",
                      "memberName": "downvotingAllowed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36123,
                      "src": "2016:23:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:25:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34363,
                  "id": 34367,
                  "nodeType": "Return",
                  "src": "2009:32:36"
                }
              ]
            },
            "baseFunctions": [
              34708,
              36123
            ],
            "functionSelector": "60506ff6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "downvotingAllowed",
            "nameLocation": "1912:17:36",
            "overrides": {
              "id": 34360,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34358,
                  "name": "Governor",
                  "nameLocations": [
                    "1953:8:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35317,
                  "src": "1953:8:36"
                },
                {
                  "id": 34359,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "1963:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36253,
                  "src": "1963:16:36"
                }
              ],
              "src": "1944:36:36"
            },
            "parameters": {
              "id": 34357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:2:36"
            },
            "returnParameters": {
              "id": 34363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34362,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34369,
                  "src": "1990:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34382,
            "nodeType": "FunctionDefinition",
            "src": "2054:126:36",
            "nodes": [],
            "body": {
              "id": 34381,
              "nodeType": "Block",
              "src": "2141:39:36",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34377,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2158:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Contest_$34383_$",
                          "typeString": "type(contract super Contest)"
                        }
                      },
                      "id": 34378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2164:7:36",
                      "memberName": "creator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36133,
                      "src": "2158:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 34379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:15:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34376,
                  "id": 34380,
                  "nodeType": "Return",
                  "src": "2151:22:36"
                }
              ]
            },
            "baseFunctions": [
              35544,
              36133
            ],
            "functionSelector": "02d05d3f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creator",
            "nameLocation": "2063:7:36",
            "overrides": {
              "id": 34373,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 34371,
                  "name": "IGovernor",
                  "nameLocations": [
                    "2094:9:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35628,
                  "src": "2094:9:36"
                },
                {
                  "id": 34372,
                  "name": "GovernorSettings",
                  "nameLocations": [
                    "2105:16:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36253,
                  "src": "2105:16:36"
                }
              ],
              "src": "2085:37:36"
            },
            "parameters": {
              "id": 34370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:2:36"
            },
            "returnParameters": {
              "id": 34376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34375,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34382,
                  "src": "2132:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2131:9:36"
            },
            "scope": 34383,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34243,
              "name": "Governor",
              "nameLocations": [
                "291:8:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35317,
              "src": "291:8:36"
            },
            "id": 34244,
            "nodeType": "InheritanceSpecifier",
            "src": "291:8:36"
          },
          {
            "baseName": {
              "id": 34245,
              "name": "GovernorSettings",
              "nameLocations": [
                "301:16:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36253,
              "src": "301:16:36"
            },
            "id": 34246,
            "nodeType": "InheritanceSpecifier",
            "src": "301:16:36"
          },
          {
            "baseName": {
              "id": 34247,
              "name": "GovernorSorting",
              "nameLocations": [
                "319:15:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36896,
              "src": "319:15:36"
            },
            "id": 34248,
            "nodeType": "InheritanceSpecifier",
            "src": "319:15:36"
          },
          {
            "baseName": {
              "id": 34249,
              "name": "GovernorModuleRegistry",
              "nameLocations": [
                "336:22:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35954,
              "src": "336:22:36"
            },
            "id": 34250,
            "nodeType": "InheritanceSpecifier",
            "src": "336:22:36"
          }
        ],
        "canonicalName": "Contest",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34383,
          35954,
          36896,
          35894,
          36253,
          35317,
          35628,
          35399,
          31179,
          28998,
          31712,
          31724,
          29840
        ],
        "name": "Contest",
        "nameLocation": "280:7:36",
        "scope": 34384,
        "usedErrors": [
          29853,
          29855,
          35330
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 36
}